<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>大学创业的结束随笔</title>
      <link href="/2021/11/03/chuangye-end/"/>
      <url>/2021/11/03/chuangye-end/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 如果让博主盘点自己的大学生涯，说实话挺单调的，就是 – <code>All In 创业</code> </p></blockquote><p>博主，只不过是一个有两年创业经历的互联网年轻人。读的是双非重本的学校，在校期间开家小型软件公司，开展经营活动数次，这就是博主过往大学的基本情况。提到校园创业者，按我理解，是要分两种，一种为了参加创业比赛赢奖而在台上进行创业路演的学生，一种是为了挣钱在校期间有真实创办运作公司经历的学生。博主属于后者，业务活跃地点<strong>Base州湾&amp;广州</strong>。博主参与的都是要求落地的商业案例，更多追求的是项目的健壮性与快速迭代，没有其他科技园团队比赛项目的创新和天花乱坠，正是如此，博主没有参赛，即使有料也没奖证明自己。不过博主私心里还是个需要被认可的人。</p><h3 id="时间线"><a href="#时间线" class="headerlink" title="时间线"></a>时间线</h3><p>博主的大一是创业准备阶段，从考核进入学校科技园网维创业团队，与同届伙伴携手开始，做创业准备。作为技术骨干，博主去学习网页软件开发，掌握了java写后端的技能； </p><p>大二则是一边学习一边接业务，找机会拓展渠道；</p><p>到大三才创办公司，有了公司资质，便有了广泛的客户群，有了各种签约订单，工作忙得没有了生活，疫情期间日均工作13小时；</p><p>大四达成网维团队初始设定的创业目标–可持续性经营， 也是承接了团队的十几年创业传统。</p><p>在一番折腾后，博主于刚毕业的六月末决定直接退出股权离开公司，退出了创业赛道。</p><p>博主在大学走了一条不同寻常稍坎坷的路，路上挑战重重，但感受到每一步是渐进式，人在不断成长。不细讲了，总体有得有失吧。</p><h3 id="创业动机"><a href="#创业动机" class="headerlink" title="创业动机"></a>创业动机</h3><ol><li>当初就是对互联网方面有想法、有兴趣、也觉得自己有实力且合适就选择创业了，没有想得很复杂，分析很细致。</li><li>想过让自己创作的产品能在市场上得到认可反馈，有一个亲手打造的成就感满满的长线产品，自己顺势往复合式人才方向发展。</li><li>选择大学创业，是因为年轻有试错的资本，追梦也是年轻人的权利，大学是适合去积累创业经验的时间点，失败也无畏，真到上岁数很怕失去了这份激情。</li><li>现实有资源支撑，具备可行性，博主选择创业，能够得到机遇、人脉、客户、资金，还有创业前辈成熟的商业模式，加上一同上道的创业伙伴，博主具备足够的执行力，顺势而为了。</li><li>并非创业不可，博主做事也会权衡，考研，找工作，考公，创业在大一的时候都想过，这是个选赛道问题，早选择则不迷茫。机缘巧合接触了多位创业者，了解其人生轨迹后，博主内心挺愿意创业。</li></ol><h3 id="离开原因"><a href="#离开原因" class="headerlink" title="离开原因"></a>离开原因</h3><blockquote><p>根本原因是个人达到瓶颈上限，在公司里对个人发展失去信心。<br>博主主要负责项目技术，也参与团队管理，还会与客户对接，前期分析需求协助产品设计，后期对开发成品做验收测试，全流程打怪属于是。<br>什么都做，意味着什么都不精通。创业期间，博主的时间被繁杂重复的劳动工作占据，自己苦了自己，却发现一切都距离个人目标越来越遥远，得不到自身的价值追求。</p></blockquote><blockquote><p>博主想开了，博主的创业其实是在通过简单重复的方式赚取利润，旧的业务如此，不断探索的新业务也是如此，若是不精进自己，不赋能自身，就一眼看到尽头。<br>博主已经决定要成为专一的技术人员，要摆脱现状，跳出小公司氛围，离开自己的公司，裸辞去挤出时间精力去研究学习沉淀，势必把深层代码逻辑了解通透，学好算法与数据结构，深入操作系统与虚拟机，熟悉网络，数据库和分布式，跑好技术赛道。<br>不留恋过往，在设定目标后，参与到云上自习室，通过衡水模式的坚持+努力，最后希望找一个符合双方利益、有共同价值观的企业。11月了，博主还在坚持~</p></blockquote><h3 id="离开后感悟"><a href="#离开后感悟" class="headerlink" title="离开后感悟"></a>离开后感悟</h3><blockquote><p>总觉得，人生一定给自己一个plan B。博主也是个憨憨，当时决定创业后，主动舍弃了很多有用的机会，说不后悔是假的。首当其冲是错过校招机会，结合身边进入大厂的同学来看，<br>博主加入了科技园团队，若是不选择创业，按自己的学习情况，有希望进入一个不错的厂，可惜博主没有走好这一步棋。事到如今，过往就让他随风而去，走好当下才有更好的未来，博主也不放弃，有机会也去争取。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos部署web项目的环境配置</title>
      <link href="/2019/10/07/centos-init/"/>
      <url>/2019/10/07/centos-init/</url>
      
        <content type="html"><![CDATA[<h2 id="系统查看"><a href="#系统查看" class="headerlink" title="系统查看"></a>系统查看</h2><p>查看版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure></p><h2 id="安装JAVA8"><a href="#安装JAVA8" class="headerlink" title="安装JAVA8"></a>安装JAVA8</h2><p>输入命令，查看jdk安装情况<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep java</span><br></pre></td></tr></table></figure></p><p>#如果jdk已经存在，可使用批量卸载命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep java | xargs rpm -e --nodeps</span><br></pre></td></tr></table></figure></p><p>直接yum安装1.8.0版本openjdk</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk* -y</span><br></pre></td></tr></table></figure><p>验证安装成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></p><h2 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h2><p>输入命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/yum.repos.d/MariaDB.repo</span><br></pre></td></tr></table></figure></p><p>通过vim操作，写入并保存<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mariadb]</span><br><span class="line">name = MariaDB</span><br><span class="line">baseurl = http://mirrors.ustc.edu.<span class="keyword">cn</span>/mariadb/yum/<span class="number">10.3</span>/centos6-amd64/</span><br><span class="line">gpgkey = http://mirrors.ustc.edu.<span class="keyword">cn</span>/mariadb/yum/RPM-GPG-KEY-MariaDB</span><br><span class="line">gpgcheck=<span class="number">1</span></span><br></pre></td></tr></table></figure></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[mariadb]</span><br><span class="line">name = MariaDB</span><br><span class="line">baseurl = http://mirrors.ustc.edu.<span class="keyword">cn</span>/mariadb/yum/<span class="number">10.3</span>/centos7-amd64</span><br><span class="line">gpgkey=http<span class="variable">s:</span>//mirrors.ustc.edu.<span class="keyword">cn</span>/mariadb/yum/RPM-GPG-KEY-MariaDB</span><br><span class="line">gpgcheck=<span class="number">0</span></span><br></pre></td></tr></table></figure><p>搜索已安装的mariadb<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep mariadb</span><br></pre></td></tr></table></figure></p><p>如果存在就删除<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -e --nodeps mariadb-*</span><br><span class="line"></span><br><span class="line">yum remove mysql mysql-server mysql-libs compat-mysql51</span><br></pre></td></tr></table></figure></p><p>安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">yum -y install mariadb mariadb-server</span><br></pre></td></tr></table></figure></p><p>基本命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">systemctl start mariadb <span class="comment">#启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb <span class="comment">#设置开机启动</span></span><br><span class="line">systemctl restart mariadb <span class="comment">#重新启动</span></span><br><span class="line">systemctl stop mariadb.service <span class="comment">#停止MariaDB</span></span><br></pre></td></tr></table></figure></p><p>启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql start</span><br></pre></td></tr></table></figure></p><p>设置开机启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig mysql on</span><br></pre></td></tr></table></figure></p><p>登录到数据库　 用命令登录到MariaDB，此时root账户的密码为空。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot</span><br></pre></td></tr></table></figure></p><p>进行MariaDB的相关简单配置,使用mysql_secure_installation命令进行配置。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure></p><p>配置用户 （账号：root 密码 123456【请修改】）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root password &apos;123456&apos;</span><br></pre></td></tr></table></figure></p><p>配置权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p 123456</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO root@&quot;%&quot; IDENTIFIED BY &quot;missionary&quot;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><hr><h6 id="配置字符集-可忽略"><a href="#配置字符集-可忽略" class="headerlink" title="配置字符集(可忽略)"></a>配置字符集(可忽略)</h6><p>查看当前字符集<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW VARIABLES WHERE Variable_name LIKE <span class="string">'character_set_%'</span> OR Variable_name LIKE &gt; <span class="string">'collation%'</span>;</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">show variables like <span class="string">'%character%'</span>;</span><br><span class="line"></span><br><span class="line">show variables like <span class="string">'collation%'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">写mysql 命令</span><br><span class="line">``` bash</span><br><span class="line">set character_set_server=utf8;</span><br><span class="line"></span><br><span class="line">set collation_database=utf8_unicode_ci;</span><br><span class="line"></span><br><span class="line"> set collation_server=utf8_unicode_ci;</span><br></pre></td></tr></table></figure><p>或者</p><p>重新配置mysql<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation </span><br><span class="line">`</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter current password for root (enter for none):      &lt;–初次运行直接回车   设置密码Set root password? [Y/n]                               &lt;– 是否设置root用户密码，输入y并回车或直接回车New password:                                          &lt;– 设置root用户的密码，比如密码为123456Re-enter new password:                                 &lt;– 再输入一次你设置的密码   其他配置Remove anonymous users? [Y/n]                          &lt;– 是否删除匿名用户，回车Disallow root login remotely? [Y/n]                    &lt;–是否禁止root远程登录,回车,Remove test database and access to it? [Y/n]           &lt;– 是否删除test数据库，回车Reload privilege tables now? [Y/n]                     &lt;– 是否重新加载权限表，回车</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/my.cnf</span><br></pre></td></tr></table></figure><p>配置文件/etc/my.cnf.d/server.cnf，在[mysqld]标签下添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">init_connect=&apos;SET collation_connection = utf8_unicode_ci&apos;</span><br><span class="line"></span><br><span class="line">init_connect=&apos;SET NAMES utf8&apos;</span><br><span class="line"></span><br><span class="line">character-set-server=utf8</span><br><span class="line"></span><br><span class="line">collation-server=utf8_unicode_ci</span><br><span class="line">skip-character-set-client-handshake</span><br></pre></td></tr></table></figure></p><p>然后配置文件/etc/my.cnf.d/mysql-clients.cnf，在[mysql]中添加<br>default-character-set=utf8</p><h2 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h2><p>安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install redis</span><br></pre></td></tr></table></figure></p><p> 启动redis 服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service redis start</span><br></pre></td></tr></table></figure></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">centos 7</span><br><span class="line">systemctl start redis <span class="comment">#启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> redis <span class="comment">#设置开机启动</span></span><br><span class="line">systemctl restart redis <span class="comment">#重新启动</span></span><br><span class="line">systemctl stop redis.service <span class="comment">#停止MariaDB</span></span><br></pre></td></tr></table></figure><p>启动redis命令行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br></pre></td></tr></table></figure><p>设置开机自动启动redis<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --add redis</span><br></pre></td></tr></table></figure></p><p>设置远程连接密码验证<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config set requirepass "123456"</span><br></pre></td></tr></table></figure></p><h2 id="安装Ngnix"><a href="#安装Ngnix" class="headerlink" title="安装Ngnix"></a>安装Ngnix</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/yum.repos.d/nginx.repo</span><br></pre></td></tr></table></figure><p>centos6<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/6/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure></p><p>centos7<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure><p>启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx start</span><br></pre></td></tr></table></figure></p><p>开机启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig nginx on</span><br></pre></td></tr></table></figure></p><p>打开默认配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/conf.d/default.conf</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="1.png" alt title class>                <p></p>            </figure><p>autoindex on;</p><p>autoindex_exact_size off;</p><p>autoindex_localtime on;</p><p>charset utf-8,gbk;</p><p>添加服务,监听80端口<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name aboot.missiono.cn; # 域名</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">proxy_set_header Host $http_host;</span><br><span class="line">proxy_set_header X-NginX-Proxy true;</span><br><span class="line">proxy_pass http://127.0.0.1:8008/; #后端服务</span><br><span class="line">proxy_redirect off;</span><br><span class="line">        client_max_body_size 100m; #表示最大上传100M，需要多大设置多大</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>更新nginx配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 基础笔记</title>
      <link href="/2019/03/12/python-start/"/>
      <url>/2019/03/12/python-start/</url>
      
        <content type="html"><![CDATA[<p>查看 命名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir(__builtins__)</span><br></pre></td></tr></table></figure></p><p>查看input帮助<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">help(input)</span><br></pre></td></tr></table></figure></p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><figure class="image-box">                <img src="Image.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[1].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[2].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[3].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[4].png" alt title class>                <p></p>            </figure><h3 id="e记法"><a href="#e记法" class="headerlink" title="e记法"></a>e记法</h3><figure class="image-box">                <img src="Image[5].png" alt title class>                <p></p>            </figure><h3 id="布尔类型计算"><a href="#布尔类型计算" class="headerlink" title="布尔类型计算"></a>布尔类型计算</h3><figure class="image-box">                <img src="Image[6].png" alt title class>                <p></p>            </figure><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><figure class="image-box">                <img src="Image[7].png" alt title class>                <p></p>            </figure><h3 id="查看类型"><a href="#查看类型" class="headerlink" title="查看类型"></a>查看类型</h3><figure class="image-box">                <img src="Image[8].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[9].png" alt title class>                <p></p>            </figure><h3 id="特有计算"><a href="#特有计算" class="headerlink" title="特有计算"></a>特有计算</h3><figure class="image-box">                <img src="Image[10].png" alt title class>                <p></p>            </figure><h1 id="幂运算操作优先级"><a href="#幂运算操作优先级" class="headerlink" title="幂运算操作优先级"></a>幂运算操作优先级</h1><figure class="image-box">                <img src="Image[11].png" alt title class>                <p></p>            </figure><h2 id="三元大小比较"><a href="#三元大小比较" class="headerlink" title="三元大小比较"></a>三元大小比较</h2><figure class="image-box">                <img src="Image[12].png" alt title class>                <p></p>            </figure><h2 id="elif"><a href="#elif" class="headerlink" title="elif"></a>elif</h2><figure class="image-box">                <img src="Image[13].png" alt title class>                <p></p>            </figure><h2 id="三元操作符"><a href="#三元操作符" class="headerlink" title="三元操作符"></a>三元操作符</h2><figure class="image-box">                <img src="Image[14].png" alt title class>                <p></p>            </figure><h2 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h2><figure class="image-box">                <img src="Image[15].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[16].png" alt title class>                <p></p>            </figure><h2 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h2><figure class="image-box">                <img src="Image[17].png" alt title class>                <p></p>            </figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">member = [<span class="string">'小甲鱼'</span>,<span class="string">'小布丁'</span>,<span class="string">'小炮冰'</span>,<span class="string">'大傻逼'</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> member:</span><br><span class="line">    print(i,len(i))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">小布丁 3</span><br><span class="line">小炮冰 3</span><br><span class="line">大傻逼 3</span><br></pre></td></tr></table></figure><h2 id="range"><a href="#range" class="headerlink" title="range"></a>range</h2><figure class="image-box">                <img src="Image[18].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[19].png" alt title class>                <p></p>            </figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p><code>一个打了激素的列表</code> ,<code>一个工厂的仓库</code> , <code>混合类型的列表</code><br><figure class="image-box">                <img src="Image[20].png" alt title class>                <p></p>            </figure><br><figure class="image-box">                <img src="Image[21].png" alt title class>                <p></p>            </figure><br><figure class="image-box">                <img src="Image[22].png" alt title class>                <p></p>            </figure></p><h2 id="列表-remove-del-pop"><a href="#列表-remove-del-pop" class="headerlink" title="列表 remove() del pop()"></a>列表 remove() del pop()</h2><figure class="image-box">                <img src="Image[23].png" alt title class>                <p></p>            </figure><h2 id="列表分片"><a href="#列表分片" class="headerlink" title="列表分片"></a>列表分片</h2><figure class="image-box">                <img src="Image[24].png" alt title class>                <p></p>            </figure><h2 id="比较-从最前面的元素依次比较-类似字符串比较"><a href="#比较-从最前面的元素依次比较-类似字符串比较" class="headerlink" title="比较 从最前面的元素依次比较 (类似字符串比较)"></a>比较 从最前面的元素依次比较 (类似字符串比较)</h2><figure class="image-box">                <img src="Image[25].png" alt title class>                <p></p>            </figure><h2 id="列表运算"><a href="#列表运算" class="headerlink" title="列表运算"></a>列表运算</h2><figure class="image-box">                <img src="Image[26].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[27].png" alt title class>                <p></p>            </figure><h2 id="用分片方式或copy-才能深拷贝"><a href="#用分片方式或copy-才能深拷贝" class="headerlink" title="用分片方式或copy() 才能深拷贝"></a>用分片方式或copy() 才能深拷贝</h2><figure class="image-box">                <img src="Image[28].png" alt title class>                <p></p>            </figure><p>浅拷贝只是复制了对象的引用地址，两个对象指向同一个内存地址，所以修改其中任意的值，另一个值都会随之变化，这就是浅拷贝</p><p>深拷贝是将对象及值复制过来，两个对象修改其中任意的值另一个值不会改变，这就是深拷贝<br><figure class="image-box">                <img src="Image[29].png" alt title class>                <p></p>            </figure></p><h2 id="元祖"><a href="#元祖" class="headerlink" title="元祖  ()"></a>元祖  ()</h2><figure class="image-box">                <img src="Image[30].png" alt title class>                <p></p>            </figure><p>元祖不可修改,删除和插入<br><figure class="image-box">                <img src="Image[31].png" alt title class>                <p></p>            </figure></p><h3 id="元祖的修改"><a href="#元祖的修改" class="headerlink" title="元祖的修改"></a>元祖的修改</h3><figure class="image-box">                <img src="Image[32].png" alt title class>                <p></p>            </figure><h3 id="元祖的自动回收"><a href="#元祖的自动回收" class="headerlink" title="元祖的自动回收"></a>元祖的自动回收</h3><p>手动回收<br><figure class="image-box">                <img src="Image[33].png" alt title class>                <p></p>            </figure><br><figure class="image-box">                <img src="Image[34].png" alt title class>                <p></p>            </figure></p><h3 id="字符串-似元祖-无字符类型"><a href="#字符串-似元祖-无字符类型" class="headerlink" title="字符串 (似元祖) (无字符类型)"></a>字符串 (似元祖) (无字符类型)</h3><figure class="image-box">                <img src="Image[35].png" alt title class>                <p></p>            </figure><h3 id="函数文档"><a href="#函数文档" class="headerlink" title="函数文档"></a>函数文档</h3><figure class="image-box">                <img src="Image[36].png" alt title class>                <p></p>            </figure><h3 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h3><figure class="image-box">                <img src="Image[37].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[38].png" alt title class>                <p></p>            </figure><h3 id="返回多个值-元祖"><a href="#返回多个值-元祖" class="headerlink" title="返回多个值(元祖)"></a>返回多个值(元祖)</h3><figure class="image-box">                <img src="Image[39].png" alt title class>                <p></p>            </figure><h3 id="使用全局变量"><a href="#使用全局变量" class="headerlink" title="使用全局变量"></a>使用全局变量</h3><figure class="image-box">                <img src="Image[40].png" alt title class>                <p></p>            </figure><h3 id="内嵌函数"><a href="#内嵌函数" class="headerlink" title="内嵌函数"></a>内嵌函数</h3><figure class="image-box">                <img src="Image[41].png" alt title class>                <p></p>            </figure><h3 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h3><figure class="image-box">                <img src="Image[42].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[43].png" alt title class>                <p></p>            </figure><h3 id="声明不是局部变量"><a href="#声明不是局部变量" class="headerlink" title="声明不是局部变量"></a>声明不是局部变量</h3><figure class="image-box">                <img src="Image[44].png" alt title class>                <p></p>            </figure><h3 id="lambda"><a href="#lambda" class="headerlink" title="lambda"></a>lambda</h3><figure class="image-box">                <img src="Image[45].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[46].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[47].png" alt title class>                <p></p>            </figure><h3 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h3><figure class="image-box">                <img src="Image[48].png" alt title class>                <p></p>            </figure><h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><figure class="image-box">                <img src="Image[49].png" alt title class>                <p></p>            </figure><h3 id="设置递归内存深度"><a href="#设置递归内存深度" class="headerlink" title="设置递归内存深度"></a>设置递归内存深度</h3><figure class="image-box">                <img src="Image[50].png" alt title class>                <p></p>            </figure><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 非递归</span><br><span class="line">def factorial_1(n):</span><br><span class="line">    result = n ;</span><br><span class="line">    for i in range(1,n):</span><br><span class="line">        result *=i;</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line">number = int(input(&apos;请输入一个正整数:&apos;))</span><br><span class="line">result = factorial_1(number)</span><br><span class="line">print(&quot;%d 的阶乘是: %d&quot;%(number ,result))</span><br><span class="line"></span><br><span class="line"># 递归</span><br><span class="line">def factorial_2(n):</span><br><span class="line">    if n == 1:</span><br><span class="line">        return 1</span><br><span class="line">    else:</span><br><span class="line">        return n*factorial_2(n-1)</span><br><span class="line"></span><br><span class="line">number = int(input(&quot;请输入一个正整数&quot;))</span><br><span class="line">result = factorial_2(number)</span><br><span class="line">print(&quot;%d 的阶乘是: %d&quot;%(number ,result))</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="Image[51].png" alt title class>                <p></p>            </figure><h1 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h1><figure class="image-box">                <img src="Image[52].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[53].png" alt title class>                <p></p>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;&apos;李宁&apos;: &apos;一切皆有可能&apos;, &apos;nike&apos;: &apos;just do it&apos;, &apos;阿迪&apos;: &apos;impossible is nothing&apos;&#125;</span><br><span class="line">print(dict1[&apos;阿迪&apos;])</span><br><span class="line"></span><br><span class="line">dict2 = &#123;1: &apos;one&apos;, 2: &apos;two&apos;, 3: &apos;three&apos;&#125;</span><br><span class="line">print(dict2[1])</span><br><span class="line"></span><br><span class="line">dict3 = dict(((&apos;a&apos;, 21), (&apos;b&apos;, 43), (&apos;c&apos;, 23423)))</span><br><span class="line">print(dict3[&apos;c&apos;])</span><br><span class="line"></span><br><span class="line">dict4 = dict(我=&apos;帅哥&apos;, 你=&apos;傻b&apos;)</span><br><span class="line">print(dict4[&apos;我&apos;])</span><br><span class="line">dict4[&apos;你&apos;]=&apos;弟弟&apos;</span><br><span class="line">dict4[&apos;他&apos;]=&apos;儿子&apos;</span><br><span class="line">print(dict4)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">impossible is nothing</span><br><span class="line">one</span><br><span class="line">23423</span><br><span class="line">帅哥</span><br><span class="line">&#123;&apos;我&apos;: &apos;帅哥&apos;, &apos;你&apos;: &apos;弟弟&apos;, &apos;他&apos;: &apos;儿子&apos;&#125;</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="Image[54].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[55].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[56].png" alt title class>                <p></p>            </figure><h3 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h3><p>get(key,new value)<br>如果有项,则返回value,如果没有返回new value<br><figure class="image-box">                <img src="Image[57].png" alt title class>                <p></p>            </figure></p><h2 id="清空和指向"><a href="#清空和指向" class="headerlink" title="清空和指向"></a>清空和指向</h2><figure class="image-box">                <img src="Image[58].png" alt title class>                <p></p>            </figure><h2 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h2><p>浅拷贝之后不互相影响<br><figure class="image-box">                <img src="Image[59].png" alt title class>                <p></p>            </figure></p><h2 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h2><figure class="image-box">                <img src="Image[60].png" alt title class>                <p></p>            </figure><h2 id="setdefaut"><a href="#setdefaut" class="headerlink" title="setdefaut"></a>setdefaut</h2><p>setdefault() 函数和 get()方法 类似, 如果键不存在于字典中，将会添加键并将值设为默认值。</p><figure class="image-box">                <img src="Image[61].png" alt title class>                <p></p>            </figure><h2 id="update"><a href="#update" class="headerlink" title="update"></a>update</h2><figure class="image-box">                <img src="Image[62].png" alt title class>                <p></p>            </figure><h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><figure class="image-box">                <img src="Image[63].png" alt title class>                <p></p>            </figure><h2 id="frozenset"><a href="#frozenset" class="headerlink" title="frozenset"></a>frozenset</h2><figure class="image-box">                <img src="Image[64].png" alt title class>                <p></p>            </figure><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><figure class="image-box">                <img src="Image[65].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[66].png" alt title class>                <p></p>            </figure><p>seek(方法) 是指针<br><figure class="image-box">                <img src="Image[67].png" alt title class>                <p></p>            </figure><br><figure class="image-box">                <img src="Image[68].png" alt title class>                <p></p>            </figure><br><figure class="image-box">                <img src="Image[69].png" alt title class>                <p></p>            </figure></p><h2 id="写入"><a href="#写入" class="headerlink" title="写入"></a>写入</h2><figure class="image-box">                <img src="Image[70].png" alt title class>                <p></p>            </figure><h2 id="读取文件分割字符"><a href="#读取文件分割字符" class="headerlink" title="读取文件分割字符"></a>读取文件分割字符</h2><figure class="image-box">                <img src="Image[71].png" alt title class>                <p></p>            </figure><h2 id="os模块"><a href="#os模块" class="headerlink" title="os模块"></a>os模块</h2><figure class="image-box">                <img src="Image[72].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[73].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[74].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[75].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[76].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[77].png" alt title class>                <p></p>            </figure><h2 id="pickle-将字典二进制存放-黄瓜"><a href="#pickle-将字典二进制存放-黄瓜" class="headerlink" title="pickle(将字典二进制存放) 黄瓜"></a>pickle(将字典二进制存放) 黄瓜</h2><figure class="image-box">                <img src="Image[78].png" alt title class>                <p></p>            </figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">print(os.getcwd())</span><br><span class="line">my_list=[<span class="number">124</span>,<span class="number">4.23</span>,<span class="string">"we are go"</span> ,[<span class="string">'another list'</span>]]</span><br><span class="line">pickle_file=open(<span class="string">"my_list.pkl"</span>,<span class="string">"wb"</span>)</span><br><span class="line">pickle.dump(my_list,pickle_file)</span><br><span class="line">pickle_file.close();</span><br><span class="line"></span><br><span class="line">pickle_file=open(<span class="string">"my_list.pkl"</span>,<span class="string">"rb"</span>)</span><br><span class="line">my_list2=pickle.load(pickle_file)</span><br><span class="line">print(my_list2)</span><br></pre></td></tr></table></figure><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><figure class="image-box">                <img src="Image[79].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[80].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[81].png" alt title class>                <p></p>            </figure><h2 id="with"><a href="#with" class="headerlink" title="with"></a>with</h2><p>抽象出try catch中的细节<br>代码更简洁<br> <figure class="image-box">                <img src="Image[82].png" alt title class>                <p></p>            </figure></p><h2 id="EasyGui"><a href="#EasyGui" class="headerlink" title="EasyGui"></a>EasyGui</h2> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> # -*- coding:utf-8 -*-</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">__author__ = &apos;Missionary&apos;</span><br><span class="line">__time__ = &apos;2019/3/31 0031 8:59&apos;</span><br><span class="line"></span><br><span class="line">import easygui as g</span><br><span class="line"></span><br><span class="line">while 1:</span><br><span class="line">    g.msgbox(&quot;欢迎进入界面&quot;)</span><br><span class="line">    msg= &quot;请问你要干什么?&quot;</span><br><span class="line">    title=&quot;游戏互动&quot;</span><br><span class="line">    choices=[&apos;谈恋爱&apos;,&apos;打篮球&apos;,&apos;打工&apos;,&apos;学习&apos;]</span><br><span class="line"></span><br><span class="line">    choices=g.choicebox(msg,title,choices)</span><br><span class="line"></span><br><span class="line">    g.msgbox(&quot;你的选择是&quot;+ str(choices),&quot;结果&quot;)</span><br><span class="line">    msg=&quot;你希望重新开始吗?&quot;</span><br><span class="line">    title=&quot;请选择&quot;</span><br><span class="line"></span><br><span class="line">    if g.ccbox(msg,title):</span><br><span class="line">        pass</span><br><span class="line">    else:</span><br><span class="line">        sys.exit(0)</span><br></pre></td></tr></table></figure><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2> <figure class="image-box">                <img src="Image[83].png" alt title class>                <p></p>            </figure><h2 id="private-伪私有"><a href="#private-伪私有" class="headerlink" title="private 伪私有"></a>private 伪私有</h2> <figure class="image-box">                <img src="Image[84].png" alt title class>                <p></p>            </figure><p> <img src="Image[85].png" alt></p><p> <img src="Image[86].png" alt><br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> name：一般变量，在类中，类外都可以使用，对象直接可以访问</span><br><span class="line"> </span><br><span class="line">__name:双下划线私有变量，在类中可以访问，类外不能直接访问</span><br><span class="line"></span><br><span class="line">_name:单下划线的变量，与双下划线有点类似也是私有变量，区别在于from 模块 import *时不能导入，类和对象能直接访问</span><br><span class="line"></span><br><span class="line">__init__:类似这样的两边都有的双下划线的方法时系统具有特殊功能的方法，一般不要这样自定义方法，如__new__用来创建对象，__init__用来初始化对象</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xx_:单后置下划线,用于避免与Python关键词的冲突</span><br></pre></td></tr></table></figure></p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> class Parent:</span><br><span class="line">    def hello(self):</span><br><span class="line">        print(&quot;调用父类&quot;)</span><br><span class="line"></span><br><span class="line">    def say(self):</span><br><span class="line">        print(&quot;调用父类say&quot;)</span><br><span class="line"></span><br><span class="line">class Child(Parent):</span><br><span class="line">    def hello(self):</span><br><span class="line">        print(&quot;调用子类&quot;)</span><br><span class="line"></span><br><span class="line">c=Child()</span><br><span class="line">c.hello();</span><br><span class="line">c.say();</span><br></pre></td></tr></table></figure><h2 id="重写构造方法"><a href="#重写构造方法" class="headerlink" title="重写构造方法"></a>重写构造方法</h2> <figure class="image-box">                <img src="Image87.png" alt title class>                <p></p>            </figure><p> <img src="Image[87].png" alt></p><h2 id="super"><a href="#super" class="headerlink" title="super"></a>super</h2><figure class="image-box">                <img src="Image[88].png" alt title class>                <p></p>            </figure><h2 id="多继承"><a href="#多继承" class="headerlink" title="多继承"></a>多继承</h2><figure class="image-box">                <img src="Image[89].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[90].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[91].png" alt title class>                <p></p>            </figure><h2 id="静态方法-无self"><a href="#静态方法-无self" class="headerlink" title="静态方法(无self)"></a>静态方法(无self)</h2><figure class="image-box">                <img src="Image[92].png" alt title class>                <p></p>            </figure><h2 id="self-绑定-变成实例对象的方法"><a href="#self-绑定-变成实例对象的方法" class="headerlink" title="self 绑定 变成实例对象的方法"></a>self 绑定 变成实例对象的方法</h2><figure class="image-box">                <img src="Image[93].png" alt title class>                <p></p>            </figure><h2 id="子类"><a href="#子类" class="headerlink" title="子类"></a>子类</h2><figure class="image-box">                <img src="Image[94].png" alt title class>                <p></p>            </figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="image-box">                <img src="Image[95].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[96].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[97].png" alt title class>                <p></p>            </figure><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><figure class="image-box">                <img src="Image[98].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[99].png" alt title class>                <p></p>            </figure><h1 id="property-get-set-del"><a href="#property-get-set-del" class="headerlink" title="property(get,set, del)"></a>property(get,set, del)</h1><figure class="image-box">                <img src="Image[100].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[101].png" alt title class>                <p></p>            </figure><p>意思应该是用户一直用的是x,所以用户是不需要修改的，但是作为程序员我们需要修改，不使用property的话两者都需要修改，使得用户体验很差</p><figure class="image-box">                <img src="Image[102].png" alt title class>                <p></p>            </figure><h2 id="new-极少重写"><a href="#new-极少重写" class="headerlink" title="new   极少重写"></a>new   极少重写</h2><figure class="image-box">                <img src="Image[103].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[104].png" alt title class>                <p></p>            </figure><h2 id="垃圾回收机制"><a href="#垃圾回收机制" class="headerlink" title="垃圾回收机制"></a>垃圾回收机制</h2><figure class="image-box">                <img src="Image[105].png" alt title class>                <p></p>            </figure><h2 id="加减"><a href="#加减" class="headerlink" title="加减"></a>加减</h2><figure class="image-box">                <img src="Image[106].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[107].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[108].png" alt title class>                <p></p>            </figure><h2 id="模板方法"><a href="#模板方法" class="headerlink" title="模板方法"></a>模板方法</h2><h3 id="计时器"><a href="#计时器" class="headerlink" title="计时器"></a>计时器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">import time as t</span><br><span class="line"></span><br><span class="line">class MyTimer():</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.unit=[&apos;年&apos;,&apos;月&apos;,&apos;日&apos;,&apos;时&apos;,&apos;分&apos;,&apos;秒&apos;]</span><br><span class="line">        self.prompt=&quot;计时未开始&quot;</span><br><span class="line">        self.lasted=[]</span><br><span class="line">        #self.start=0</span><br><span class="line">        #self.stop =0</span><br><span class="line">        self.begin=0</span><br><span class="line">        self.end =0</span><br><span class="line"></span><br><span class="line">    def __str__(self):</span><br><span class="line">        return self.prompt</span><br><span class="line"></span><br><span class="line">    __repr__=__str__</span><br><span class="line"></span><br><span class="line">    def start(self):</span><br><span class="line">        self.begin=t.localtime()</span><br><span class="line">        self.prompt=&apos;请先调用stop()停止计时&apos;</span><br><span class="line">        print(&quot;计时开始!&quot;)</span><br><span class="line"></span><br><span class="line">    def stop(self):</span><br><span class="line">        if not self.begin:</span><br><span class="line">            print(&quot;请先调用start()进行计时&quot;)</span><br><span class="line">        else:</span><br><span class="line">            self.end=t.localtime()</span><br><span class="line">            self._calc()</span><br><span class="line">            print(&quot;计时结束!&quot;)</span><br><span class="line"></span><br><span class="line">##内部方法,计算运行时间</span><br><span class="line">    def _calc(self):</span><br><span class="line">        self.lasted=[]</span><br><span class="line">        self.prompt = &quot;总共运行了&quot;</span><br><span class="line">        for index in range(6) :</span><br><span class="line">            self.lasted.append(self.end[index]-self.begin[index])</span><br><span class="line">            if self.lasted[index]:</span><br><span class="line">                self.prompt+=(str(self.lasted[index])+self.unit[index])</span><br><span class="line">        print(self.prompt)</span><br><span class="line">        # 初始化</span><br><span class="line">        self.begin=0</span><br><span class="line">        self.end=0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t1=MyTimer()</span><br><span class="line">t1.stop()</span><br><span class="line">print(t1)</span><br><span class="line">t1.start()</span><br><span class="line">print(t1)</span><br><span class="line">t.sleep(4)</span><br><span class="line">t1.stop()</span><br><span class="line">print(t1)</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">请先调用start()进行计时</span><br><span class="line">计时未开始</span><br><span class="line">计时开始!</span><br><span class="line">请先调用stop()停止计时</span><br><span class="line">总共运行了4秒</span><br><span class="line">计时结束!</span><br><span class="line">总共运行了4秒</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="Image[109].png" alt title class>                <p></p>            </figure><p><strong>getattribute</strong>的优先级高于<strong>getattr</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">class C:</span><br><span class="line">    def __getattribute__(self, item):</span><br><span class="line">        print(&quot;getattribute&quot;)</span><br><span class="line">        return super().__getattribute__(item)</span><br><span class="line"></span><br><span class="line">    def __getattr__(self, item):</span><br><span class="line">        print(&apos;getattr&apos;)</span><br><span class="line"></span><br><span class="line">    def __setattr__(self, key, value):</span><br><span class="line">        print(&quot;setattr&quot;)</span><br><span class="line">        super().__setattr__(key,value)</span><br><span class="line"></span><br><span class="line">    def __delattr__(self, item):</span><br><span class="line">        print(&apos;delattr&apos;)</span><br><span class="line">        super().__delattr__(item)</span><br><span class="line"></span><br><span class="line">c=C()</span><br><span class="line">c.x</span><br><span class="line">print(&apos;========&apos;)</span><br><span class="line">c.x=1</span><br><span class="line">print(&apos;========&apos;)</span><br><span class="line">print(c.x)</span><br><span class="line"></span><br><span class="line">del c.x</span><br><span class="line"></span><br><span class="line">================================================</span><br><span class="line">输出:</span><br><span class="line">getattribute</span><br><span class="line">getattr</span><br><span class="line">========</span><br><span class="line">setattr</span><br><span class="line">========</span><br><span class="line">getattribute</span><br><span class="line">1</span><br><span class="line">delattr</span><br></pre></td></tr></table></figure></p><h2 id="描述符"><a href="#描述符" class="headerlink" title="描述符"></a>描述符</h2><figure class="image-box">                <img src="Image[110].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[111].png" alt title class>                <p></p>            </figure><p>instance：拥有者的实例对象，owner：拥有者类</p><h2 id="定义容器"><a href="#定义容器" class="headerlink" title="定义容器"></a>定义容器</h2><figure class="image-box">                <img src="Image[112].png" alt title class>                <p></p>            </figure><h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2><figure class="image-box">                <img src="Image[113].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[114].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[115].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[116].png" alt title class>                <p></p>            </figure><h2 id="生成器-yield"><a href="#生成器-yield" class="headerlink" title="生成器 yield"></a>生成器 yield</h2><figure class="image-box">                <img src="Image[117].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[118].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[119].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[120].png" alt title class>                <p></p>            </figure><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><figure class="image-box">                <img src="Image[121].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[122].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[123].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[124].png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="Image[125].png" alt title class>                <p></p>            </figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python，基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019春节假回家碎碎念</title>
      <link href="/2019/02/16/2019-holiday/"/>
      <url>/2019/02/16/2019-holiday/</url>
      
        <content type="html"><![CDATA[<blockquote><p>学校的灯灭了很多，熄了很久，盖似无人烟</p><p>这里的水流了又止，止了又行，周而非复始</p><p>钟海楼保安叨叨絮语，恨不得拎人而鞭驱其乡</p><p>校外车水马龙，待送一批批盟友同志，寻其归宿</p><p>唯博主不曾离开。</p><p>并不是对学校数日相伴的依恋，坦然，我更偏现实主义的人，只是钱绕脑梁，在执行待命于学校的任务罢了。</p><p><strong>谓吾何秀？</strong></p><p>答曰，非蜀道若般项目，亦非坚守不渝之本心，乃怪携程车票抢不到位，误了时辰，鸽了日子。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">高铁终有一堵，天命必有一咕。</span><br></pre></td></tr></table></figure><h1 id="2月1日"><a href="#2月1日" class="headerlink" title="2月1日"></a>2月1日</h1><h2 id="归来"><a href="#归来" class="headerlink" title="归来"></a>归来</h2><p>对家乡发展，有惊喜与不满足</p><h3 id="惊喜"><a href="#惊喜" class="headerlink" title="惊喜"></a>惊喜</h3><p>高铁站花开美景<br><figure class="image-box">                <img src="1.JPG" alt title class>                <p></p>            </figure></p><p>回到家乡，人整整齐齐。小伙伴都回来了，相逢吉时，想必能整活一番。</p><h3 id="不满足"><a href="#不满足" class="headerlink" title="不满足"></a>不满足</h3><p>线上支付未能全覆盖家乡。年年岁岁年年，博主盼着不用带现金出门，时至今日还是摆脱不过客运车只收纸币的现实。</p><h1 id="2月2日"><a href="#2月2日" class="headerlink" title="2月2日"></a>2月2日</h1><h2 id="约与见面"><a href="#约与见面" class="headerlink" title="约与见面"></a>约与见面</h2><h3 id="约"><a href="#约" class="headerlink" title="约"></a>约</h3><p>计划约朋友去溜旱冰，顺带陪朋友拿快递。</p><p>当我们前往旱冰场，只看到一个低分差评的场地。我们立马取消了溜旱冰的念头，转去好不热闹的KTV房。一首敬月光，一首敬过往，唱两小时，慢慢有网络上流行的那feel“好嗨哦，感觉人生已经到达了巅峰，感觉人生已经到达……”(啪、严肃点)</p><p>这两小时，单身的博主听着情歌，不经意会思考自己的经历，伤感自己与他人的差异，也悟出了生活中最朴实的道理：<br>“做人不要太攀比 踏踏实实做自己 </p><p>如果非要比一比 那就比比激光雨 u r b b r g r ao u gei 北鼻八啦八啦揪” (～￣▽￣)～</p><p>咳咳，写偏了，回到主线。</p><h3 id="见面"><a href="#见面" class="headerlink" title="见面"></a>见面</h3><p>关于见面，这次的见面主要是见海归友人阿狗，他请客吃麻辣烫，把以前交好的同学聚在了一起，相谈甚欢。<br>他们都长大了，各有见识，各成家事，更高兴的是，店是那家店，人还是那些人，食物还是原来的配方，还是熟悉的味道，真怀念。</p><h1 id="2月3日"><a href="#2月3日" class="headerlink" title="2月3日"></a>2月3日</h1><h2 id="愧疚感"><a href="#愧疚感" class="headerlink" title="愧疚感"></a>愧疚感</h2><p>   在家干活，不存在的。这些天，我就很累很疲倦，个人感受如此。计划上，我今天是休息的。<br>我所理解的休息，包括睡觉，看动漫，看书，闲逸地敲代码，发呆。</p><p>是的，我思想上已编出了好几个不干活的理由，所以，我认为按照自己的想法行动无可厚非。当老妈让我做准备迎春的一些工作的时候，我无动于衷，内心是拒绝的，甚至逃到别人家。这一点，体现博主存在的懒惰，也看到博主在某些方面的固执，比如计划上的事，不想被打破。还看到博主也是相当容易接纳自己，包容自己，因为博主是懒得明明白白，还不知悔改的那种人。（自嘲）</p><p><code>说实话，博主还是挺愧疚的。</code></p><p>推敲事件，联想到一个现象：长辈叫孩子干活，为什么会有抵触情绪呢？<br>依我的表现看出一方面: 如果孩子出现抵触情绪，可能他是有自己的事情在做，或有自己的计划要执行，而这一点，大人往往是忽略的。家人提出一些任务，会打扰到孩子手头上的事情，这样，孩子不耐烦的可能性会增大。看到社交层面，寻找人帮忙之道正是如此，让人帮忙，那得先了解别人当时的忙碌状态，比如问：“现在有没有空呢？”当了解清楚，再去做出要不要让人帮忙的决定，这样更容易让人接受你的请求。</p><p>嗯，这几段真是逻辑鬼才。</p><h1 id="2月4日"><a href="#2月4日" class="headerlink" title="2月4日"></a>2月4日</h1><h2 id="祝福"><a href="#祝福" class="headerlink" title="祝福"></a>祝福</h2><p>谢谢网友的新春祝福，当然同时祝福大家猪年大吉，诸事顺利！红包？不存在的。</p><p>┬┴┬┌─　●─┬─　　│─┼─┐　●├─┤○<br>┴┬┴├┬　┌─┼─　│◎　│　│　○└┬┘●<br>─┼─││　│　│　　││─┴─┴　──┼──<br>●│○││　┴─┼─　　│○　　●　／　│　＼<br>今天，给商业项目增加新功能 ，写写博客，一如既往的样子。</p><h1 id="2月5日"><a href="#2月5日" class="headerlink" title="2月5日"></a>2月5日</h1><h2 id="烧烤"><a href="#烧烤" class="headerlink" title="烧烤"></a>烧烤</h2><p>每年春节，我们都会搞活动，不经意间已经传承十多载之余。<br>今年大年初一，又是烧烤。</p><figure class="image-box">                <img src="2.JPG" alt title class>                <p></p>            </figure><p>买的食物有点多，吃不完。</p><p>每年都烧烤，貌似今年才有女生加入搞活动，嗯，她们算是朋友打麻将拐过来的，以前是典型的罗汉局，今年总算增加了一点生物多样性。</p><p>想起以前，博主不擅长社交场合，在一群同龄女生面前，会有不自在，闻到有香水味就想打喷嚏，现在上大学，社交场上的不自然感慢慢克服了，大概是青春期过了吧，不在乎别人打印象分了。</p><p>通过这事，想起一些小时候的刻板印象<br>人总是不经意间给他人贴标签，这是不对的，多年不见面，人的变化肯定存在，如今的自己也不是以前的自己。比如你曾经某些时刻发现小明有点屌~丝行为，从此，在你心里，他便有了屌丝的标签。屌丝，成了你对这个人的刻板印象。</p><p>如何知道自己是否对人有刻板印象？<br>靠时间校验，当你发现眼前的这个人与你想象中差别很大的时候，这可能就说明你心中是给他贴了标签的,存有刻板印象</p><p>别人成长了，就要抛弃曾经对他的刻板印象，用成熟的心态去与他交流。</p><h1 id="2月6"><a href="#2月6" class="headerlink" title="2月6"></a>2月6</h1><h2 id="焗鸡"><a href="#焗鸡" class="headerlink" title="焗鸡"></a>焗鸡</h2><p>性感大厨，在线焗鸡<br><figure class="image-box">                <img src="3.JPG" alt title class>                <p></p>            </figure></p><p>比以前的焗鸡好吃咯，虽然以前的焗鸡已经忘记了味道，但直觉告诉我今年比较好吃</p><h1 id="2月7"><a href="#2月7" class="headerlink" title="2月7"></a>2月7</h1><p>在家，敲代码</p><h1 id="2月8"><a href="#2月8" class="headerlink" title="2月8"></a>2月8</h1><p>在朋友家，敲代码</p><h1 id="2月9"><a href="#2月9" class="headerlink" title="2月9"></a>2月9</h1><p>孙中山故居行<br><figure class="image-box">                <img src="4.png" alt title class>                <p></p>            </figure></p><p>旅游景点分几个区域，美国区、英国区、日本区</p><p>图片正是在日本区中拍摄，服装是可以租借</p><p>博主感觉，除了拍照挺无趣，不值得，不过，无论去哪，陪同家人才是最大的意义</p><h1 id="2月10"><a href="#2月10" class="headerlink" title="2月10"></a>2月10</h1><p>流浪地球<br>无论地球的命运导向何处，我们选择希望</p><figure class="image-box">                <img src="5.jpg" alt title class>                <p></p>            </figure><p>北京第三交通委的提醒深入人心</p><h1 id="2月11"><a href="#2月11" class="headerlink" title="2月11"></a>2月11</h1><p>收拾行李，准备下一站</p><h1 id="2月12"><a href="#2月12" class="headerlink" title="2月12"></a>2月12</h1><p>出发广州</p><p>参加会议</p><p>其中讲到了<code>奋进</code>的概念</p><p>博主理解了一点浅显的内容</p><p>包含两层含义: <code>奋斗与上进</code></p><p><code>上进</code>是发自内心的，它可以无付出的，空想的努力心境亦谓之上进</p><p><code>奋斗</code>是付出行动的，它可以内心不上进的，但行动是切切实实的</p><p>其实每个人都可以是上进的,没有不上进的人</p><p>如果他不上进，他只是缺少激发因素 ，适当的约谈可以赋予人上进的动力</p><p>所谓<code>奋进</code>，就是奋斗与上进的结合，既是内心努力追求 ，又是付出行动</p><p>它应该是一种状态，并非人的特性，人的某时刻是奋进 ，另一时刻却是慵懒</p><p>而追求持续奋进，便是我们创业者所追求达到的目标</p><p>现在把员工分三类:</p><blockquote><ol><li><p>干活少的不积极员工</p></li><li><p>任务完成，点到即止，不愿多余付出的普通员工</p></li><li><p>奋进的积极员工，献出很多劳动付出</p></li></ol></blockquote><p>在公司中<br><code>1类型</code>的员工其实是在<code>剽窃</code>着<code>3类型</code>的的员工的劳动成果</p><p>如果<code>1类型</code>的员工做着自己的剽窃行为，他还在说:我做得少，却获得与大家相当的报酬，我是聪慧的</p><p>这种少劳而洋洋得意的思维会把公司员工的积极性死死地抑制住，把公司推向一个不作为的氛围</p><p>作为管理者，必须让他们明白其中的剽窃逻辑，一起达成良好的强共识，形成积极的企业文化</p><p>明确两点:</p><ul><li><p><code>第一点</code>  作为<code>1类型</code>的员工不可对自己的行为洋洋得意，相对的，是应该抱有感谢<code>3类型</code>的员工的心态，还有羞愧的心理</p></li><li><p><code>第二点</code>  作为管理者，要对<code>3类型</code>的员工做<code>奖励</code>机制，奖励他们的付出</p></li></ul><p><code>启示</code>:<br>做平衡往往是解决许多问题的有效方案</p><h1 id="2月13"><a href="#2月13" class="headerlink" title="2月13"></a>2月13</h1><p>前往湛江</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>下次还是假期回家，还是多待在家里吃晚饭吧，想想以后，在家吃饭的机会不多<br><figure class="image-box">                <img src="6.jpg" alt title class>                <p></p>            </figure><br><figure class="image-box">                <img src="7.jpg" alt title class>                <p></p>            </figure><br><figure class="image-box">                <img src="8.jpg" alt title class>                <p></p>            </figure><br><figure class="image-box">                <img src="9.jpg" alt title class>                <p></p>            </figure><br><figure class="image-box">                <img src="10.jpg" alt title class>                <p></p>            </figure></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置FTP服务器 window10</title>
      <link href="/2019/02/06/ftp-server/"/>
      <url>/2019/02/06/ftp-server/</url>
      
        <content type="html"><![CDATA[<blockquote><p>博主最近对文件网络存储进行了少许摸索, 了解到FTP服务是文件存储的方式之一。下面就讲讲在window10下搭建FTP服务器吧~</p></blockquote><h1 id="FTP服务简介"><a href="#FTP服务简介" class="headerlink" title="FTP服务简介"></a>FTP服务简介</h1><blockquote><p><code>FTP</code> 是<code>File Transfer Protocol</code>（文件传输协议）的英文简称，而中文简称为“文件传输协议”。用于Internet上的控制文件的双向传输。同时，它也是一个应用程序（Application）。基于不同的操作系统有不同的FTP应用程序，而所有这些应用程序都遵守同一种协议以传输文件。在FTP的使用当中，用户经常遇到两个概念：”下载”（Download）和”上传”（Upload）。”下载”文件就是从远程主机拷贝文件至自己的计算机上；”上传”文件就是将文件从自己的计算机中拷贝至远程主机上。用Internet语言来说，用户可通过客户机程序向（从）远程主机上传（下载）文件。由于FTP的文件传输是明文方式，具有一定危险性，所以又诞生了一种更加安全的传输方式vsftp,有兴趣自行了解。下面将演示如何在Window10 下开启FTP服务。</p></blockquote><h1 id="开启FTP服务"><a href="#开启FTP服务" class="headerlink" title="开启FTP服务"></a>开启FTP服务</h1><ol><li><strong>按【Win + R】快捷键打开运行对话框，输入“optionalfeatures”后，按回车键</strong><figure class="image-box">                <img src="cded92cfb84e998ab5dc5524d0b4b1dc.png" alt title class>                <p></p>            </figure></li></ol><ol start="2"><li><strong>从“启用或关闭Windows功能”弹窗中找到Internet Information Services(或者中文版Internet信息服务)并打开</strong><figure class="image-box">                <img src="7e15c1b94ef45715cec16992c0ea9302.png" alt title class>                <p></p>            </figure></li></ol><ol start="3"><li><strong>配置IIS并点击确定</strong><figure class="image-box">                <img src="4016239a6c0c0ac2ec87ef1b3e0061db.png" alt title class>                <p></p>            </figure></li></ol><ol start="4"><li><strong>开始菜单搜索“IIS”并点击进入IIS管理器</strong><figure class="image-box">                <img src="d719fcafd5a8e0733338f2d6653d968d.png" alt title class>                <p></p>            </figure></li></ol><ol start="5"><li><strong>查看本机ip地址，后续访问Ftp地址需要用到（打开cmd输入ipconfig）</strong><figure class="image-box">                <img src="331455aee43602549541b3ccb028d359.png" alt title class>                <p></p>            </figure></li></ol><ol start="6"><li><strong>IIS网站管理器“网站”右键弹出菜单点击“添加FTP站点”</strong><figure class="image-box">                <img src="af6cae20df02d6b398b9bf8b978f588c.png" alt title class>                <p></p>            </figure></li></ol><p>7.<strong>配置网站（网站名称：FtpSite 物理路径：D:\projectdev\ftpserver</strong><br><figure class="image-box">                <img src="c4a658488e25b98c816167ba406a7743.png" alt title class>                <p></p>            </figure></p><ol start="8"><li><strong>IP 端口号 SSL设置</strong> <figure class="image-box">                <img src="bd59d4c115ba466544c80e21dc03275d.png" alt title class>                <p></p>            </figure></li></ol><ol start="9"><li><strong>身份验证和授权信息设置</strong> <figure class="image-box">                <img src="ed1a1af5b07a5b980ab0e37202f1c90e.png" alt title class>                <p></p>            </figure></li></ol><figure class="image-box">                <img src="1a92cf57ebed2a6dc4d8070744182003.png" alt title class>                <p></p>            </figure><p>可以看到,当访问ftp://<strong> </strong> <strong> </strong> ** 的时候,我们无需用户权限,这样是不安全的<br>所以,下面将为ftp设置禁用匿名权限,只有登录用户才可以访问</p><ol start="10"><li><strong>禁用匿名用户访问</strong><figure class="image-box">                <img src="820c7ab5e5bccaff543ce9ac2c28d906.png" alt title class>                <p></p>            </figure></li></ol><figure class="image-box">                <img src="9ad8290cd1e5d9a2a047b5b968bd5d81.png" alt title class>                <p></p>            </figure><ol start="11"><li><strong>创建新的可登录用户</strong><figure class="image-box">                <img src="73145d99ad7c918bd7cd0f50c9ff2645.png" alt title class>                <p></p>            </figure></li></ol><figure class="image-box">                <img src="e75f2c0da2cb3611c92b2f178bca94a3.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="6f1ee8bdf87910e6bbe15611dcf7fd31.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="3dd44ac1bbffe41bb5096ff1831166e9.png" alt title class>                <p></p>            </figure><p>输入新用户账号密码,即可访问</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>这种配置FTP服务的方式,只能针对固定的IPV4地址。当我们换了IPV4地址,则需要再新建一个FTP服务。 这确实不是最佳的FTP服务方案。 如果作为局域网或测试项目的使用, 博主觉得已经这样可以满足您。但是, 当需求更高, 任务更重, 则需要在Linux服务器上搭建vftp服务了。好了, 本文结束, ヾ(￣▽￣)Bye~Bye~</p>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ftp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring-data-jpa 投影查询性能之坑</title>
      <link href="/2019/02/05/jpa-problem/"/>
      <url>/2019/02/05/jpa-problem/</url>
      
        <content type="html"><![CDATA[<blockquote><p>项目开发过程中, 遇到了一个文章列表查询速度非常慢的问题。这到底是怎么回事呢?</p><p>一路追查下来, 发现竟然是<code>spring-data-jpa</code>设计上的问题, 问题稍后说明, 博主先简评一下<code>spring-data-jpa</code>, <code>spring-data-jpa</code>很多时候真的很令人劝退, 各种奇奇怪怪的BUG, 功能达不到项目所需, 关联查询灵活性低 , 一些注解失效或难用, 但它简便的开发方式又令人不忍割舍, 正向生成数据库, 通过命名方法对数据库操作,分页排序查询等确实特别好用。</p><p>总之, <code>spring-data-jpa</code>像个爱耍小脾气的漂亮女生, 一开始接触她, 你能享受到各种快乐优雅的开发模式, 觉得她就是我最想要的人, 被她迷得神魂颠倒, 接触久了, 便发现其中的各种毛病, 她不仅满足不了自己, 还可能会给你带来各种烦恼, 让你不禁会问:  为什么你的操作总是令我头秃 ? 她会说: 你去翻遍我所有的文档, 你会发现, 我就是这样不讲理的。</p><p>这时候, 无奈的你则需要其他框架的辅助, <code>JdbcTemplate</code> 或 <code>Mybatis Plus</code>能够帮帮你解决问题。<code>spring-data-jpa</code>优势很明显, 缺点也多,  希望<code>spring-data-jpa</code>能日趋成熟,  以后做个善解人意的女人, 加大开发灵活性, 满足更多开发者的诉求, 这样博主也会服服帖帖地倒在她的石榴裙下o(<em>￣▽￣</em>)o~嗷~  。</p></blockquote><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>看代码</p><h4 id="Article实体类"><a href="#Article实体类" class="headerlink" title="Article实体类"></a>Article实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonIgnoreProperties;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Sets;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.NotFound;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.NotFoundAction;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.Where;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.Range;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mission</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/1/24 0024-15:39</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//jpa 注解</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"article"</span>)</span><br><span class="line"><span class="comment">//Lombok</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@Where</span>(clause = <span class="string">"ar_status = 1"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Article</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Id</span></span><br><span class="line">  <span class="meta">@GeneratedValue</span>(strategy =  GenerationType.IDENTITY)</span><br><span class="line">  <span class="keyword">private</span> Long arId;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@NotNull</span>(message = <span class="string">"文章标题arTitle不能为空"</span>)</span><br><span class="line">  <span class="meta">@Column</span>(nullable = <span class="keyword">false</span>)</span><br><span class="line">  <span class="keyword">private</span> String arTitle;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Column</span>(columnDefinition = <span class="string">"longtext "</span>)</span><br><span class="line">  <span class="keyword">private</span> String arContent;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Column</span>(nullable = <span class="keyword">false</span>,columnDefinition = <span class="string">"datetime DEFAULT CURRENT_TIMESTAMP"</span>)</span><br><span class="line">  <span class="keyword">private</span> LocalDate arDate;<span class="comment">//时间  默认当前系统时间</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Range</span>(min=-<span class="number">1</span>,max=<span class="number">1</span>,message = <span class="string">"逻辑状态arStatus超出范围"</span>)</span><br><span class="line">  <span class="meta">@Column</span>(length = <span class="number">2</span>)</span><br><span class="line">  <span class="keyword">private</span> Integer arStatus; <span class="comment">// 状态 (0回收站删除 ,1显示)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@OrderBy</span>(<span class="string">"ac_id asc "</span>)</span><br><span class="line">  <span class="meta">@JsonIgnoreProperties</span>(<span class="string">"articles"</span>)</span><br><span class="line">  <span class="meta">@NotFound</span>(action= NotFoundAction.IGNORE)</span><br><span class="line">  <span class="meta">@ManyToMany</span>(cascade = &#123;CascadeType.PERSIST,CascadeType.MERGE,CascadeType.REFRESH&#125;,fetch = FetchType.LAZY)</span><br><span class="line">  <span class="meta">@JoinTable</span>(name = <span class="string">"relation_article_cate"</span>,joinColumns = <span class="meta">@JoinColumn</span>(name = <span class="string">"ar_id"</span>),inverseJoinColumns = <span class="meta">@JoinColumn</span>(name = <span class="string">"arc_id"</span>))</span><br><span class="line">  <span class="keyword">private</span> Set&lt;ArticleCategory&gt; articleCategories= Sets.newHashSet();</span><br><span class="line"></span><br><span class="line">  <span class="meta">@NotFound</span>(action= NotFoundAction.IGNORE)</span><br><span class="line">  <span class="meta">@OneToMany</span>(cascade = &#123;CascadeType.ALL&#125;,fetch = FetchType.LAZY)</span><br><span class="line">  <span class="meta">@JoinColumn</span>(name = <span class="string">"ar_id"</span>)</span><br><span class="line">  <span class="keyword">private</span> Set&lt;FileResource&gt; fileResources = Sets.newHashSet();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@NotFound</span>(action= NotFoundAction.IGNORE)</span><br><span class="line">  <span class="meta">@OneToMany</span>(cascade = &#123;CascadeType.ALL&#125;,fetch = FetchType.LAZY)</span><br><span class="line">  <span class="meta">@JoinColumn</span>(name = <span class="string">"ar_id"</span>)</span><br><span class="line">  <span class="keyword">private</span> Set&lt;Video&gt; videos= Sets.newHashSet();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Article投影"><a href="#Article投影" class="headerlink" title="Article投影"></a>Article投影</h4><p>主要关注这里<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonInclude;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mission</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/1/27 0027-9:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ArticleSimpleProjection</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function">Long <span class="title">getArId</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="function">String <span class="title">getArTitle</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="function">LocalDate <span class="title">getArDate</span><span class="params">()</span></span>;<span class="comment">//时间  默认当前系统时间</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@JsonInclude</span>(JsonInclude.Include.NON_EMPTY)</span><br><span class="line">  <span class="function">Set&lt;ArticleCategoryProjection&gt; <span class="title">getArticleCategories</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="Article投影查询方法"><a href="#Article投影查询方法" class="headerlink" title="Article投影查询方法"></a>Article投影查询方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.wteam.gdousd.entity.Article;</span><br><span class="line"><span class="keyword">import</span> com.wteam.gdousd.entity.projection.ArticleSimpleProjection;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * (Article)表数据库JPA储存库</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> makejava</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2019-01-25 15:21:13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ArticleRepository</span> <span class="keyword">extends</span> <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">Article</span>&gt;,<span class="title">JpaRepository</span>&lt;<span class="title">Article</span>,<span class="title">Long</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function">Page&lt;ArticleSimpleProjection&gt; <span class="title">findByArStatusAndArTitleLike</span><span class="params">(Integer status,String arTitle, Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>当执行方法以后<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hibernate: <span class="keyword">select</span> article0_.ar_id <span class="keyword">as</span> ar_id1_1_, article0_.ar_content <span class="keyword">as</span> ar_conte2_1_, article0_.ar_date <span class="keyword">as</span> ar_date3_1_, article0_.ar_status <span class="keyword">as</span> ar_statu4_1_, article0_.ar_title <span class="keyword">as</span> ar_title5_1_ <span class="keyword">from</span> article article0_ <span class="keyword">where</span> ( article0_.ar_status = <span class="number">1</span>) <span class="keyword">and</span> article0_.ar_status=? <span class="keyword">and</span> (article0_.ar_title <span class="keyword">like</span> ?) <span class="keyword">order</span> <span class="keyword">by</span> article0_.ar_date <span class="keyword">desc</span> <span class="keyword">limit</span> ?</span><br></pre></td></tr></table></figure></p><p>可以看到,<code>article0_.ar_content , article0_.ar_status</code> 等在<code>ArticleSimpleProjection</code> 接口中定义方法没有对应上的数据库字段竟然也被jpa查出 ,其中<code>ar_content</code>是文章内容,属于大文本字段, 查询多个记录而且还查询该字段的话,查询速度就比原来慢了好几倍。 这不是博主想要的结果, 必须优化!</p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>投影接口中存在返回集合的定义方法, 使得<code>spring-data-jpa</code>会自动查询所有字段, 目前博主也不知道什么原因(博主没有看过源码)。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JsonInclude</span>(JsonInclude.Include.NON_EMPTY)</span><br><span class="line"> <span class="function">Set&lt;ArticleCategoryProjection&gt; <span class="title">getArticleCategories</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></p><p>因为在投影中存在集合,在<code>ArticleSimpleProjection</code> 接口中就存在了返回Set集合的定义方法<code>getArticleCategories()</code>, 所以查询投影就会将所有字段查询,这是<code>spring-data-jpa</code>的设计所致</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><h4 id="Article投影-1"><a href="#Article投影-1" class="headerlink" title="Article投影"></a>Article投影</h4><p>去掉Set集合<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wteam.gdousd.entity.projection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonInclude;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mission</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/1/27 0027-9:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ArticleSimpleProjection</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function">Long <span class="title">getArId</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="function">String <span class="title">getArTitle</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="function">LocalDate <span class="title">getArDate</span><span class="params">()</span></span>;<span class="comment">//时间  默认当前系统时间</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@JsonInclude</span>(JsonInclude.Include.NON_EMPTY)</span><br><span class="line">  <span class="function">ArticleCategoryProjection <span class="title">getArticleCategories</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hibernate: <span class="keyword">select</span> article0_.ar_id <span class="keyword">as</span> col_0_0_, article0_.ar_title <span class="keyword">as</span> col_1_0_, article0_.ar_date <span class="keyword">as</span> col_2_0_, articlecat2_.ac_id <span class="keyword">as</span> col_3_0_, articlecat2_.ac_id <span class="keyword">as</span> ac_id1_2_, articlecat2_.ac_name <span class="keyword">as</span> ac_name2_2_, articlecat2_.sub_classify <span class="keyword">as</span> sub_clas3_2_ <span class="keyword">from</span> article article0_ <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> relation_article_cate articlecat1_ <span class="keyword">on</span> article0_.ar_id=articlecat1_.ar_id <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> article_category articlecat2_ <span class="keyword">on</span> articlecat1_.arc_id=articlecat2_.ac_id <span class="keyword">where</span> ( article0_.ar_status = <span class="number">1</span>) <span class="keyword">and</span> article0_.ar_status=? <span class="keyword">and</span> (article0_.ar_title <span class="keyword">like</span> ?) <span class="keyword">order</span> <span class="keyword">by</span> article0_.ar_date <span class="keyword">desc</span> <span class="keyword">limit</span> ?</span><br></pre></td></tr></table></figure><p>从结果可见,只要不用set集合,就不会发生jpa查询所有字段的事情。<br>有时候, 非要把查询结果放在用Set集合中, 就自定义查询吧! 博主认为, 这种情况, 用其他框架 <code>JdbcTemplate</code> 或 <code>Mybatis Plus</code>实现更好。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p> 目前对数据库操作的框架, 博主使用的是<code>spring-data-jpa</code> +<code>JdbcTemplate</code>  或 <code>Mybatis Plus</code>, 基本满足小项目的开发。可是, 各个框架都有优有劣, 博主至今很难做出最佳选择, 真的想全都要呀!可是这样项目体积会变得很庞大哎~~ 如果读者有更好的对数据库操作的框架推荐 或 对本章内容有什么意见建议, 可以在下方评论留言,你的每一言都会让这个无聊博主的人生添上不一样的色彩哦~ヾ(￣▽￣)Bye~Bye~</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> jpa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用EasyCode十分钟写后端增删改查代码</title>
      <link href="/2019/02/04/2019-new-year/"/>
      <url>/2019/02/04/2019-new-year/</url>
      
        <content type="html"><![CDATA[<blockquote><p>已经到了2019年春节, 可以闲下来写写博客咯。博主自上大学以来,项目开发经验积累了不少。期间, 我也学会了一些”邪门歪道”, 比如, 开发过程使用了Intellij Idea中的插件<code>Easy Code</code>, 发现能大大简化了后端开发, 将开发效率地提高到十分钟就能完成后端的基本功能实现, 真是太棒了! 再也不需要重复地干无趣的活儿了!</p></blockquote><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>下面开始介绍今天的主角 EasyCode 吧</p><blockquote><p><code>English</code>:</p><ul><li>The code generation plug-in based on IntelliJ IDEA is developed to support custom -  templates (Java, HTML, JS, XML).</li><li>As long as database related code can be generated through custom templates. Support database type and Java type mapping relationship configuration.</li><li>The code that supports generating multiple tables at the same time. Each table has a separate configuration information. Full personalization definition, the rules are set by you.</li></ul><p><code>中文</code>：</p><ul><li>基于IntelliJ IDEA开发的代码生成插件，支持自定义任意模板（Java，html，js，xml）。</li><li>只要是与数据库相关的代码都可以通过自定义模板来生成。支持数据库类型与java类型映射关系配置。</li><li>支持同时生成生成多张表的代码。每张表有独立的配置信息。完全的个性化定义，规则由你设置。</li></ul></blockquote><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="image-box">                <img src="0a5044676b2542ab2743f45566076453.png" alt title class>                <p></p>            </figure><ol><li>在IDEA中打开Settings -&gt; Plugins</li><li>搜索 Easy Code</li><li>点击  Install 安装</li><li>安装完成后,重启IDEA</li></ol><h1 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h1><h2 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h2><figure class="image-box">                <img src="a966efa56066f86529e93f19eadaa49c.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="41e85e39baf0fdeddf464197cb27aaf9.png" alt title class>                <p></p>            </figure><p>提前安装和建立好数据库,填写好数据库必要信息(数据库地址,数据库名,数据库账号,密码)</p><h2 id="代码生成使用"><a href="#代码生成使用" class="headerlink" title="代码生成使用"></a>代码生成使用</h2><figure class="image-box">                <img src="a91fcd88f0a3b55e8b8edbe7639c922d.png" alt title class>                <p></p>            </figure><h3 id="选择Config-Table"><a href="#选择Config-Table" class="headerlink" title="选择Config Table"></a>选择Config Table</h3><figure class="image-box">                <img src="d772cd999d966070f28059825dde850d.png" alt title class>                <p></p>            </figure><p>检查或修改 数据库字段类型与属性类型映射对应关系</p><h3 id="选择-Generate-Code"><a href="#选择-Generate-Code" class="headerlink" title="选择 Generate Code"></a>选择 Generate Code</h3><figure class="image-box">                <img src="ea8ad60b3b35b3945291c85de78c81de.png" alt title class>                <p></p>            </figure><p>选择好<code>Module</code> , <code>Package</code>, <code>Path</code>,<br>选择自己所需的<code>Template</code>代码</p><p><strong>点击ok,发现项目已经生成了代码</strong><br><figure class="image-box">                <img src="c5cb1b607f739aaf842b9d67b5177131.png" alt title class>                <p></p>            </figure></p><h2 id="相关配置"><a href="#相关配置" class="headerlink" title="相关配置"></a>相关配置</h2><p>选择<code>Settings</code> -&gt; <code>Other Settings</code>-&gt; <code>Easy Code</code><br><figure class="image-box">                <img src="9f4b83b5bbf2690063b987b226c31f9e.png" alt title class>                <p></p>            </figure></p><h3 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h3><p>修改数据库表前缀<br><figure class="image-box">                <img src="930884777e3b6e7647d855d1ffd9eb0e.png" alt title class>                <p></p>            </figure></p><h3 id="映射配置"><a href="#映射配置" class="headerlink" title="映射配置"></a>映射配置</h3><p>添加longtext类型的映射<br><figure class="image-box">                <img src="5e1227d7d66b3747a472165adca37264.png" alt title class>                <p></p>            </figure></p><h3 id="代码模板配置"><a href="#代码模板配置" class="headerlink" title="代码模板配置"></a>代码模板配置</h3><figure class="image-box">                <img src="9436c57b8e90665bcd5b0c6d1f06b0ee.png" alt title class>                <p></p>            </figure><h4 id="自定义代码配置"><a href="#自定义代码配置" class="headerlink" title="自定义代码配置"></a>自定义代码配置</h4><p><code>Easy Code</code> 提供了自定义模板的功能,这一点非常方便后台的开发,也是本博主最看重这个插件的地方。<br>比如说,我们项目中没有使用到<code>Mybatis</code>,而是使用<code>springboot</code>结合<code>spring-data-jpa</code>开发,这个时候,原来提供的模板是难以派上用场,此时,我们就需要自己写出代码模板,怎么写呢?<br>这需要<code>Velocity</code>模板引擎的知识</p><blockquote><p>Velocity是一个基于java的模板引擎（template engine）。它允许任何人仅仅简单的使用模板语言（template language）来引用由java代码定义的对象。</p></blockquote><p>如果没有这方面的学习,也没关系<br>可以参考网址:<a href="http://www.shujuhaiyang.com" target="_blank" rel="noopener">http://www.shujuhaiyang.com</a><br>也可以看Description的提示和其他模板代码来编写</p><p>下面是博主修改的一些代码模板,是为了使用<code>springboot</code>结合<code>spring-data-jpa</code>开发而编写的,希望看了对你有帮助</p><h5 id="repository-jpa-java"><a href="#repository-jpa-java" class="headerlink" title="repository(jpa).java"></a>repository(jpa).java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">##引入宏定义</span><br><span class="line"> $!define</span><br><span class="line"></span><br><span class="line">##使用宏定义设置回调（保存位置与文件后缀）</span><br><span class="line">        #save("/entity", ".java")</span><br><span class="line"></span><br><span class="line">##使用宏定义设置包后缀</span><br><span class="line">#setPackageSuffix("entity")</span><br><span class="line"></span><br><span class="line">##使用全局变量实现默认包导入</span><br><span class="line">    $!autoImport</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line">##使用宏定义实现类注释信息</span><br><span class="line">#tableComment("实体类")</span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> $!</span>&#123;tableInfo.name&#125; implements Serializable</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = $!tool.serial();</span><br><span class="line">#foreach($column in $tableInfo.fullColumn)</span><br><span class="line">    #if($&#123;column.comment&#125;)//$&#123;column.comment&#125;#end</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> $!&#123;tool.getClsNameByFullName($column.type)&#125; $!&#123;column.name&#125;;</span><br><span class="line">#end</span><br><span class="line"></span><br><span class="line">#foreach($column in $tableInfo.fullColumn)</span><br><span class="line">##使用宏定义实现get,set方法</span><br><span class="line">#getSetMethod($column)</span><br><span class="line">#end</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="repository-jpa-data-rest-java"><a href="#repository-jpa-data-rest-java" class="headerlink" title="repository(jpa+data-rest).java"></a>repository(jpa+data-rest).java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##定义初始变量</span><br><span class="line">    #set($tableName = $tool.append($tableInfo.name, "Repository"))</span><br><span class="line">    ##设置回调</span><br><span class="line">    $!callback.setFileName($tool.append($tableName, <span class="string">".java"</span>))</span><br><span class="line">    $!callback.setSavePath($tool.append($tableInfo.savePath, <span class="string">"/repository"</span>))</span><br><span class="line"></span><br><span class="line">    ##拿到主键</span><br><span class="line">    #if(!$tableInfo.pkColumn.isEmpty())</span><br><span class="line">    #set($pk = $tableInfo.pkColumn.get(0))</span><br><span class="line">    #end</span><br><span class="line"></span><br><span class="line">    #if($tableInfo.savePackageName)package $!&#123;tableInfo.savePackageName&#125;.#&#123;end&#125;repository;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> $!&#123;tableInfo.savePackageName&#125;.entity.$!&#123;tableInfo.name&#125;;</span><br><span class="line">    <span class="keyword">import</span> java.util.List;</span><br><span class="line">    <span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line">    <span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line">    <span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line">    <span class="keyword">import</span> org.springframework.data.rest.core.annotation.RepositoryRestResource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * $!&#123;tableInfo.comment&#125;($!&#123;tableInfo.name&#125;)表数据库JPA储存库</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> $!author</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> $!time.currTime()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RepositoryRestResource</span>(path=<span class="string">"$!tool.firstLowerCase($!&#123;tableInfo.name&#125;)"</span>)</span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> $!</span>&#123;tableName&#125; extends JpaSpecificationExecutor&lt;$!&#123;tableInfo.name&#125;&gt;,JpaRepository&lt;$!&#123;tableInfo.name&#125;,$!pk.shortType&gt;&#123;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="service-jpa-java"><a href="#service-jpa-java" class="headerlink" title="service(jpa).java"></a>service(jpa).java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">##定义初始变量</span><br><span class="line">    #set($tableName = $tool.append($tableInfo.name, "Service"))</span><br><span class="line">    ##设置回调</span><br><span class="line">    $!callback.setFileName($tool.append($tableName, <span class="string">".java"</span>))</span><br><span class="line">    $!callback.setSavePath($tool.append($tableInfo.savePath, <span class="string">"/service"</span>))</span><br><span class="line"></span><br><span class="line">    ##拿到主键</span><br><span class="line">    #if(!$tableInfo.pkColumn.isEmpty())</span><br><span class="line">    #set($pk = $tableInfo.pkColumn.get(0))</span><br><span class="line">    #end</span><br><span class="line"></span><br><span class="line">    #if($tableInfo.savePackageName)package $!&#123;tableInfo.savePackageName&#125;.#&#123;end&#125;service;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> $!&#123;tableInfo.savePackageName&#125;.entity.$!&#123;tableInfo.name&#125;;</span><br><span class="line">    <span class="keyword">import</span> org.springframework.data.domain.Example;</span><br><span class="line">    <span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line">    <span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * $!&#123;tableInfo.comment&#125;($!&#123;tableInfo.name&#125;)表服务接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> $!author</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> $!time.currTime()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> $!</span>&#123;tableName&#125; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过ID查询单条数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $!pk.name 主键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 实例对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    $!&#123;tableInfo.name&#125; queryById($!pk.shortType $!pk.name);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询多条数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> offset 查询起始位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> limit 查询条数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 对象列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Page&lt;$!&#123;tableInfo.name&#125;&gt; queryAllByLimit(<span class="keyword">int</span> offset, <span class="keyword">int</span> limit);</span><br><span class="line"></span><br><span class="line">    Page&lt;$!&#123;tableInfo.name&#125;&gt; queryAllByLimit(Pageable pageable);</span><br><span class="line"></span><br><span class="line">    List&lt;$!&#123;tableInfo.name&#125;&gt; queryAllByExample(Example&lt;$!&#123;tableInfo.name&#125;&gt; example);</span><br><span class="line"></span><br><span class="line">    Page&lt;$!&#123;tableInfo.name&#125;&gt; queryAllByExampleAndLimit(Example&lt;$!&#123;tableInfo.name&#125;&gt; example, Pageable pageable);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $!tool.firstLowerCase($!&#123;tableInfo.name&#125;) 实例对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 实例对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    $!&#123;tableInfo.name&#125; insert($!&#123;tableInfo.name&#125; $!tool.firstLowerCase($!&#123;tableInfo.name&#125;));</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $!tool.firstLowerCase($!&#123;tableInfo.name&#125;) 实例对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 实例对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    $!&#123;tableInfo.name&#125; update($!&#123;tableInfo.name&#125; $!tool.firstLowerCase($!&#123;tableInfo.name&#125;));</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过主键删除数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $!pk.name 主键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">deleteById</span><span class="params">($!pk.shortType $!pk.name)</span></span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="serviceimpl-jpa-java"><a href="#serviceimpl-jpa-java" class="headerlink" title="serviceimpl(jpa).java"></a>serviceimpl(jpa).java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">##定义初始变量</span><br><span class="line">    #set($tableName = $tool.append($tableInfo.name, "ServiceImpl"))</span><br><span class="line">    ##设置回调</span><br><span class="line">    $!callback.setFileName($tool.append($tableName, <span class="string">".java"</span>))</span><br><span class="line">    $!callback.setSavePath($tool.append($tableInfo.savePath, <span class="string">"/service/impl"</span>))</span><br><span class="line"></span><br><span class="line">    ##拿到主键</span><br><span class="line">    #if(!$tableInfo.pkColumn.isEmpty())</span><br><span class="line">    #set($pk = $tableInfo.pkColumn.get(0))</span><br><span class="line">    #end</span><br><span class="line"></span><br><span class="line">    #if($tableInfo.savePackageName)package $!&#123;tableInfo.savePackageName&#125;.#&#123;end&#125;service.impl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> $!&#123;tableInfo.savePackageName&#125;.entity.$!&#123;tableInfo.name&#125;;</span><br><span class="line">    <span class="keyword">import</span> $!&#123;tableInfo.savePackageName&#125;.repository.$!&#123;tableInfo.name&#125;Repository;</span><br><span class="line">    <span class="keyword">import</span> $!&#123;tableInfo.savePackageName&#125;.service.$!&#123;tableInfo.name&#125;Service;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> org.springframework.data.domain.Example;</span><br><span class="line">    <span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line">    <span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line">    <span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line">    <span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line">    <span class="keyword">import</span> javax.transaction.Transactional;</span><br><span class="line">    <span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line">    <span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * $!&#123;tableInfo.comment&#125;($!&#123;tableInfo.name&#125;)表服务实现类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> $!author</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> $!time.currTime()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span>(<span class="string">"$!tool.firstLowerCase($!&#123;tableInfo.name&#125;)Service"</span>)</span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> $!</span>&#123;tableName&#125; implements $!&#123;tableInfo.name&#125;Service &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> $!&#123;tableInfo.name&#125;Repository $!tool.firstLowerCase($!&#123;tableInfo.name&#125;)Repository;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过ID查询单条数据</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $!pk.name 主键</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 实例对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> $!&#123;tableInfo.name&#125; queryById($!pk.shortType $!pk.name) &#123;</span><br><span class="line"></span><br><span class="line">    $!&#123;tableInfo.name&#125; $!tool.firstLowerCase($!&#123;tableInfo.name&#125;) =<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    $!tool.firstLowerCase($!&#123;tableInfo.name&#125;) = $!tool.firstLowerCase($!&#123;tableInfo.name&#125;)Repository</span><br><span class="line">    .findById($!pk.name).get();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $!tool.firstLowerCase($!&#123;tableInfo.name&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询多条数据</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> offset 查询起始位置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> limit 查询条数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 对象列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Page&lt;$!&#123;tableInfo.name&#125;&gt; queryAllByLimit(<span class="keyword">int</span> offset, <span class="keyword">int</span> limit) &#123;</span><br><span class="line">    Pageable pageable = PageRequest.of(offset, limit);</span><br><span class="line">    <span class="keyword">return</span> $!tool.firstLowerCase($!&#123;tableInfo.name&#125;)Repository</span><br><span class="line">    .findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Page&lt;$!&#123;tableInfo.name&#125;&gt; queryAllByLimit(Pageable pageable) &#123;</span><br><span class="line">    <span class="keyword">return</span> $!tool.firstLowerCase($!&#123;tableInfo.name&#125;)Repository</span><br><span class="line">    .findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;$!&#123;tableInfo.name&#125;&gt; queryAllByExample(Example&lt;$!&#123;tableInfo.name&#125;&gt; example) &#123;</span><br><span class="line">    <span class="keyword">return</span> $!tool.firstLowerCase($!&#123;tableInfo.name&#125;)Repository</span><br><span class="line">    .findAll(example);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Page&lt;$!&#123;tableInfo.name&#125;&gt; queryAllByExampleAndLimit(Example&lt;$!&#123;tableInfo.name&#125;&gt; example, Pageable pageable) &#123;</span><br><span class="line">    <span class="keyword">return</span> $!tool.firstLowerCase($!&#123;tableInfo.name&#125;)Repository</span><br><span class="line">    .findAll(example,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 新增数据</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $!tool.firstLowerCase($!&#123;tableInfo.name&#125;) 实例对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 实例对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> $!&#123;tableInfo.name&#125; insert($!&#123;tableInfo.name&#125; $!tool.firstLowerCase($!&#123;tableInfo.name&#125;)) &#123;</span><br><span class="line">    <span class="keyword">return</span> $!tool.firstLowerCase($!&#123;tableInfo.name&#125;)Repository</span><br><span class="line">    .save($!tool.firstLowerCase($!&#123;tableInfo.name&#125;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改数据</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $!tool.firstLowerCase($!&#123;tableInfo.name&#125;) 实例对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 实例对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> $!&#123;tableInfo.name&#125; update($!&#123;tableInfo.name&#125; $!tool.firstLowerCase($!&#123;tableInfo.name&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $!tool.firstLowerCase($!&#123;tableInfo.name&#125;)Repository</span><br><span class="line">    .save($!tool.firstLowerCase($!&#123;tableInfo.name&#125;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过主键删除数据</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $!pk.name 主键</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 是否成功</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">deleteById</span><span class="params">($!pk.shortType $!pk.name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    $!tool.firstLowerCase($!&#123;tableInfo.name&#125;)Repository</span><br><span class="line">    .deleteById($!pk.name);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="webController-jpa-java"><a href="#webController-jpa-java" class="headerlink" title="webController(jpa).java"></a>webController(jpa).java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">##定义初始变量</span><br><span class="line">    #set($tableName = $tool.append($tableInfo.name, "Controller"))</span><br><span class="line">    ##设置回调</span><br><span class="line">    $!callback.setFileName($tool.append($tableName, <span class="string">".java"</span>))</span><br><span class="line">    $!callback.setSavePath($tool.append($tableInfo.savePath, <span class="string">"/web"</span>))</span><br><span class="line">    ##拿到主键</span><br><span class="line">    #if(!$tableInfo.pkColumn.isEmpty())</span><br><span class="line">    #set($pk = $tableInfo.pkColumn.get(0))</span><br><span class="line">    #end</span><br><span class="line"></span><br><span class="line">    #if($tableInfo.savePackageName)package $!&#123;tableInfo.savePackageName&#125;.#&#123;end&#125;web;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> $!&#123;tableInfo.savePackageName&#125;.entity.$!&#123;tableInfo.name&#125;;</span><br><span class="line">    <span class="keyword">import</span> $!&#123;tableInfo.savePackageName&#125;.service.$!&#123;tableInfo.name&#125;Service;</span><br><span class="line">    <span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * $!&#123;tableInfo.comment&#125;($!&#123;tableInfo.name&#125;)表控制层</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> $!author</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> $!time.currTime()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"$!tool.firstLowerCase($tableInfo.name)"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> $!</span>&#123;tableName&#125; &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> $!&#123;tableInfo.name&#125;Service $!tool.firstLowerCase($tableInfo.name)Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过主键查询单条数据</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 主键</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 单条数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"getOne?&#123;id&#125;"</span>)</span><br><span class="line"><span class="keyword">public</span> $!&#123;tableInfo.name&#125; getOne(<span class="meta">@PathVariable</span> $!pk.shortType id) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.$!&#123;tool.firstLowerCase($tableInfo.name)&#125;Service.queryById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加代码模板,将上面的代码一一复制粘贴即可<br><figure class="image-box">                <img src="c49dab933600191fcda0c1d352564dc7.png" alt title class>                <p></p>            </figure></p><p>添加后,当选择 <code>Generate Code</code>,可以看到你所添加的代码模板<br><figure class="image-box">                <img src="5c6144b2f4fb0cbcbcee85fb524143e4.png" alt title class>                <p></p>            </figure></p><h2 id="导出模板"><a href="#导出模板" class="headerlink" title="导出模板"></a>导出模板</h2><figure class="image-box">                <img src="d2d232ef03faec357af6e75046943155.png" alt title class>                <p></p>            </figure><h2 id="导入模板"><a href="#导入模板" class="headerlink" title="导入模板"></a>导入模板</h2><figure class="image-box">                <img src="aac06e0247578cc0e896a708857755c2.png" alt title class>                <p></p>            </figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>  新的一年,岁月不居,时节如流。虽然我们又老了一岁,但博主年轻的心态还未逝去。凭借年轻积极的心态,博主充满着激情去干每一件事,哪怕今天是大年初一,我对编程的热爱仍然放不下。而年轻的时光往往都是宝贵的,我不想浪费于假开心的玩乐,也不要花时间做太多的无用功做一些没有太大收获的事。<code>EasyCode</code>很适合处于当前的我,一键生成代码大大提高了开发效率,让我有了更充分的时间去完成其他的事情,更有效地把握住了时间。感谢<code>EasyCode</code>的作者<code>makejava</code></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> easycode </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git中文安装教程 window10</title>
      <link href="/2019/01/05/git-start/"/>
      <url>/2019/01/05/git-start/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Git简介"><a href="#1-Git简介" class="headerlink" title="1.Git简介"></a>1.Git简介</h2><blockquote><p><code>Git</code>是一个开源的<strong>分布式版本控制系统</strong>，可以有效、高速地处理从很小到非常大的项目版本管理。  Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p></blockquote><h2 id="2-为何选择Git"><a href="#2-为何选择Git" class="headerlink" title="2.为何选择Git"></a>2.为何选择Git</h2><blockquote><p> Git 是目前最流行的版本管理工具，如果你使用 <code>Github</code>的话，必定要用到Git。如果这里你说你没使用 <code>GitHub</code>，那么就快去用起来，哥们你错过了很多优秀的开源项目啊不能再这样下去了。目前最火的开源社区 <code>Github</code> ,就是基于 Git 版本控制系统，所以掌握 Git 技能很重要。</p><p> 因为 Git 很火，现在很多 IDE 都集成了 Git,并且提供一些相关的图形化操作。也有很多很优秀,专门用来简化 Git 操作的 Git GUI 工具，例如 <code>SourceTree</code>,<code>Tortoise</code> 等。</p><p>但是我想说的是，<code>命令行</code>才是Git的王者操作！原因是，Git Gui的工具底层也是对常用的 Git 命令进行封装实现的，所以，直接Git命令，才是最灵活的操作。</p></blockquote><h2 id="3-Git优点"><a href="#3-Git优点" class="headerlink" title="3.Git优点"></a>3.Git优点</h2><blockquote><p> 1、适合分布式开发，强调个体；<br> 2、公共的服务器压力和数量都不会太大；<br> 3、速度快， 成熟的架构，开发灵活；<br> 4、任意两个开发者之间可以很容易的解决冲突；<br> 5、离线工作，管理代码成本低，不需要依赖服务器；<br> 6、部署方便。基本上下个命令就可以用；<br> 7、良好的分支机制，可以让主干代码保持干净。</p></blockquote><h2 id="4-什么是版本控制系统"><a href="#4-什么是版本控制系统" class="headerlink" title="4.什么是版本控制系统?"></a>4.什么是版本控制系统?</h2><blockquote><p>如果你用Microsoft Word写过长篇大论，那你一定有这样的经历：</p><p>想删除一个段落，又怕将来想恢复找不回来怎么办？有办法，先把当前文件“另存为……”一个新的Word文件，再接着改，改到一定程度，再“另存为……”一个新文件，这样一直改下去，最后你的Word文档就“魂飞魄散”了！</p><p>过了一周，你想找回被删除的文字，但是已经记不清删除前保存在哪个文件里了，只好一个一个文件去找，真麻烦。</p><p>看着一堆乱七八糟的文件，想保留最新的一个，然后把其他的删掉，又怕哪天会用上，还不敢删，真郁闷。</p><p>更要命的是，有些部分需要你的财务同事帮助填写，于是你把文件Copy到U盘里给她（也可能通过Email发送一份给她），然后，你继续修改Word文件。一天后，同事再把Word文件传给你，此时，你必须想想，发给她之后到你收到她的文件期间，你作了哪些改动，得把你的改动和她的部分合并，真困难。</p><p>于是你想，如果有一个软件，不但能自动帮我记录每次文件的改动，还可以让同事协作编辑，这样就不用自己管理一堆类似的文件了，也不需要把文件传来传去。如果想查看某次改动，只需要在软件里瞄一眼就可以，岂不是很方便？</p><p>这个软件用起来就应该像这个样子，能记录每次文件的改动：</p></blockquote><table><thead><tr><th>版本</th><th style="text-align:right">用户</th><th style="text-align:right">说明</th><th style="text-align:center">日期</th></tr></thead><tbody><tr><td>1</td><td style="text-align:right">张三</td><td style="text-align:right">删除了软件服务条款5</td><td style="text-align:center">7/12 10:38</td></tr><tr><td>2</td><td style="text-align:right">张三</td><td style="text-align:right">增加了License人数限制</td><td style="text-align:center">7/12 18:09</td></tr><tr><td>3</td><td style="text-align:right">李四</td><td style="text-align:right">财务部门调整了合同金额</td><td style="text-align:center">7/13 9:51</td></tr><tr><td>4</td><td style="text-align:right">张三</td><td style="text-align:right">延长了免费升级周期</td><td style="text-align:center">7/14 15:17</td></tr></tbody></table><h2 id="4-下载"><a href="#4-下载" class="headerlink" title="4.下载"></a>4.下载</h2><p>网址: <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a></p><h2 id="5-安装"><a href="#5-安装" class="headerlink" title="5.安装"></a>5.安装</h2><p>信息</p><figure class="image-box">                <img src="c532d8a1ea8f5f0e40fdd5dfd22a957b.png" alt title class>                <p></p>            </figure><p>选择安装位置</p><p><img src="46f018daeac3ea4d800b68357c1ccdfe.png" alt><br>选择组件</p><p><img src="d3e00efe821376bddeb2a710a180bcf1.png" alt></p><p>创建开始菜单目录</p><figure class="image-box">                <img src="ff01c1b86b69befebe8a582512559807.png" alt title class>                <p></p>            </figure><p>选择Git使用的默认编辑器</p><figure class="image-box">                <img src="95f0c82636056141dcc8746ed92e841a.png" alt title class>                <p></p>            </figure><p>选择VIm</p><figure class="image-box">                <img src="32c8f0c6b3ea1eb5cce5096beb639634.png" alt title class>                <p></p>            </figure><p>配置PATH环境<br><figure class="image-box">                <img src="52b139c0538ec8164b8518ec748c985a.png" alt title class>                <p></p>            </figure></p><p>选择HTTPS传输后端</p><figure class="image-box">                <img src="840b6f3cec80ed2d1467a127e441a625.png" alt title class>                <p></p>            </figure><p>配置行结束转换</p><figure class="image-box">                <img src="4449dad2043e81de03f7b9bd2045baa6.png" alt title class>                <p></p>            </figure><p>配置终端模拟器以与 Git Bash 一起使用</p><figure class="image-box">                <img src="2a84a2912dca2b1daa80ed4e4fa7c8ba.png" alt title class>                <p></p>            </figure><p>配置额外的选项</p><figure class="image-box">                <img src="b2b82340704cc0ea2713a0d35bd7bfa0.png" alt title class>                <p></p>            </figure><p>Installing</p><figure class="image-box">                <img src="21b2bb47bf4d93bce747505e10f451b5.png" alt title class>                <p></p>            </figure><p>完成安装<br><figure class="image-box">                <img src="71c0cf85416ccf9f9789c0bb82598b2d.png" alt title class>                <p></p>            </figure></p><p>运行软件<br><figure class="image-box">                <img src="ebb6ec0f3b19c86118289f3548bd288d.png" alt title class>                <p></p>            </figure></p><h1 id="6-设置"><a href="#6-设置" class="headerlink" title="6.设置"></a>6.设置</h1><h2 id="6-1配置github的ssh密钥"><a href="#6-1配置github的ssh密钥" class="headerlink" title="6.1配置github的ssh密钥:"></a>6.1配置github的ssh密钥:</h2><p>(1)打开Git Bash查看电脑上是否已经存在SSH密钥：<br>输入<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">`</span><br></pre></td></tr></table></figure></p><p>(2)创建新的ssh key:<br>输入<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "your_email@youremail.com"</span><br></pre></td></tr></table></figure></p><p>按Enter，然后提示输入<code>passphrase（密码）</code>，输入两次（可以不输直接两次Enter），</p><p>然后会在 .ssh 目录生产两个文件<br>：id_rsa和id_rsa.pub用记事本打开.ssh目录下的id_rsa.pub文件，复制里面的内容；</p><h2 id="6-2复制ssh-key到github："><a href="#6-2复制ssh-key到github：" class="headerlink" title="6.2复制ssh key到github："></a>6.2复制ssh key到github：</h2><blockquote><p>On the GitHub site Click “Account Settings” &gt; Click “SSH Keys” &gt; Click “Add SSH key”</p></blockquote><p>打开github网站，点击右上角扳手图标，然后点击左边菜单的 ssh key， 然后右边页面的 add ssh key，将复制的内容粘贴到github的key中，title可以不填，直接保存即可。</p><h2 id="6-3测试-ssh-链接-github："><a href="#6-3测试-ssh-链接-github：" class="headerlink" title="6.3测试 ssh 链接 github："></a>6.3测试 ssh 链接 github：</h2><p>输入<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><h2 id="6-4设置自己的git信息："><a href="#6-4设置自己的git信息：" class="headerlink" title="6.4设置自己的git信息："></a>6.4设置自己的git信息：</h2><p>输入<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "Firstname Lastname"</span><br></pre></td></tr></table></figure></p><p>（此处name可修改也不是用于登录github的登录名）<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email "your_email@youremail.com"</span><br></pre></td></tr></table></figure></p><p>设置自己的git信息即完成安装和设置，可以输入git config –list查看自己的git信息。</p><h2 id="7-IntelliJ-IDEA-中GIT功能"><a href="#7-IntelliJ-IDEA-中GIT功能" class="headerlink" title="7.IntelliJ IDEA 中GIT功能"></a>7.IntelliJ IDEA 中GIT功能</h2><figure class="image-box">                <img src="dd597e1d9e0975fd13461495920258a9.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="dd597e1d9e0975fd13461495920258a9.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="4acb282c21ae8cd957093583ce38311f.png" alt title class>                <p></p>            </figure><h3 id="文献"><a href="#文献" class="headerlink" title="文献"></a>文献</h3><p><a href="https://blog.csdn.net/bmicnj/article/details/78413058" target="_blank" rel="noopener">https://blog.csdn.net/bmicnj/article/details/78413058</a><br><a href="https://baike.baidu.com/item/GIT/12647237?fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/GIT/12647237?fr=aladdin</a><br><a href="https://git-scm.com/doc" target="_blank" rel="noopener">https://git-scm.com/doc</a><br><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000</a></p>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 下载安装图文教程</title>
      <link href="/2019/01/05/mysql-start/"/>
      <url>/2019/01/05/mysql-start/</url>
      
        <content type="html"><![CDATA[<blockquote><p>岁月不居,时节如流,改革春风吹满地,本国人民真争气。博主在文体两开花之处,从京紫元年,步入了哥德巴赫猜想不到的2019年。今年年初,由于数据库课程设计的需要,部分同学想安装mysql,于是博主就写了个教程。</p></blockquote><h2 id="1-MySQL简介"><a href="#1-MySQL简介" class="headerlink" title="1.MySQL简介"></a>1.MySQL简介</h2><blockquote><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。MySQL 是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。MySQL 所使用的 SQL 语言是用于访问数据库的最常用标准化语言。</p></blockquote><p>基本语法MySQL的基本语法和SQL Server基本相同。</p><h2 id="1-1-MySQL的优缺点"><a href="#1-1-MySQL的优缺点" class="headerlink" title="1.1.MySQL的优缺点　　"></a>1.1.MySQL的优缺点　　</h2><p>（1）支持5000万条记录的数据仓库;　　<br> （2）适应于所有的平台;　　<br> （3）是开源软件，版本更新较快;　　<br> （4）性能很出色。纯粹就性能而言，MySQL是相当出色的，因为它包含一个缺省桌面格式MyISAM。MyISAM 数据库与磁盘非常地兼容而不占用过多的CPU和内存。MySQL可以运行于Windows系统而不会发生冲突，在UNIX或类似UNIX系统上运行则更好。可以通过使用64位处理器来获取额外的一些性能。因为MySQL在内部里很多时候都使用64位的整数处理;</p><h2 id="1-2-应用范围"><a href="#1-2-应用范围" class="headerlink" title="1.2.应用范围"></a>1.2.应用范围</h2><p><strong>Web网站系统</strong>：安装配置简单，性能优越，开源。<br>日志管理系统：高效的插入和查询功能，如果设计地较好，在使用MyISAM存储引擎的时候，两者可以做到互不锁定，达到很高的并发性能。<br><strong>数据仓库系统</strong>：在急需大量存储的空间和高效率的数据分析的需求下，目前基本有三种方式可以解决这一问题：</p><blockquote><ol><li>采用昂贵的高性能主机以提高计算性能，用高端存储设备提高I/O性能，效果理想，但是成本非常高；</li><li>通过将数据复制到多台使用大容量硬盘的廉价pcserver上，以提高整体计算性能和I/O能力，效果尚可，存储空间有一定限制，成本低廉；</li><li>通过将数据水平拆分，使用多台廉价的pcserver和本地磁盘来存放数据，每台机器上面都只有所有数据的.一部分，解决了数据量的问题，所有pcserver一起并行计算，也解决了计算能力问题，通过中间代理程序调配各台机器的运算任务，既可以解决计算性能问题又可以解决I/O性能问题，成本也很低廉。对于第二个和第三个，MySQL都有很大的优势（跨域的简单复制、免费）。*</li></ol></blockquote><p><strong>嵌入式系统</strong>：嵌入式环境对软件系统最大的限制是硬件资源非常有限，在嵌入式环境下运行的软件系统，必须是轻量级低消耗的软件。MySQL有专门针对嵌入式系统的版本。</p><h2 id="2-下载与安装"><a href="#2-下载与安装" class="headerlink" title="2.下载与安装"></a>2.下载与安装</h2><h3 id="2-1-下载"><a href="#2-1-下载" class="headerlink" title="2.1 下载"></a>2.1 下载</h3><figure class="image-box">                <img src="a265e4f17ccb0631ab8133d7a9848875.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="51384ce992fd9acfcdb0439acce45513.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="3d354a7820ace2c85528ebea002fb795.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="b3d29ca01839dbbec06b678d41318e08.png" alt title class>                <p></p>            </figure><h3 id="2-2安装"><a href="#2-2安装" class="headerlink" title="2.2安装"></a>2.2安装</h3><figure class="image-box">                <img src="3189f4703a91855f879deee059a5f0ff.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="1ac4316f748f679606101eb3cd006bf1.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="a9086d4e5b2952de78e5b1b501e36e28.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="88143bce7155cd2fab7ab2a751632df0.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="4112efa3677b14a1ee9eeac7dde70f72.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="1adacb2e96886e5529d7d11de5b9c561.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="6d6d3785b12356ca541e67013bca4b8c.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="3af5c1de01d4edc471c439347554495f.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="7a41fb6866feefdfc9397fba97f3625b.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="200df265bf650a850848c6b5001fcbbe.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="62c4bfe797c688f1ca1a0f617c7ea5a7.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="88f16748c90730db42c2b6bfb93d6491.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="d4f01e1ccb83be49c428eccb9c62fcee.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="56fd50ea6c3aee851994b325b628ced2.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="055f4afda1b07bc1f527dea0edd2456a.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="1d323ec75dff4d22609cc63aec9032e1.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="ec49ba6e17025f372d8eecfbcbf2cb0e.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="f9bd08ff90ce4f5e37f4da0b0853c7ac.png" alt title class>                <p></p>            </figure><h3 id="2-3-环境配置"><a href="#2-3-环境配置" class="headerlink" title="2.3 环境配置"></a>2.3 环境配置</h3><figure class="image-box">                <img src="5b2b69d8c3f314891eebb8487a8657bc.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="4148b97b90b9946ca3712752622df332.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="5c66e79395b2bdc6772d1f0ea17039c2.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="f94db123854e05a6cafb1f7b83f0938b.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="ef5685899ce7e47654def5fccc246744.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="34ae63c7df1f38ef33aa0c1231e5608c.png" alt title class>                <p></p>            </figure><h1 id="3-FAQ"><a href="#3-FAQ" class="headerlink" title="3.FAQ"></a>3.FAQ</h1><h2 id="3-1配置"><a href="#3-1配置" class="headerlink" title="3.1配置"></a><code>3.1配置</code></h2><ul><li><code>MySQL服务器类型的选择</code></li></ul><p>作为初学者，一般选择的类型为“Developer Machine(开发者机器)”即可。看个人喜好。</p><ul><li><code>MySQL的存储引擎</code></li></ul><p>确定MySQL使用情况时，选择“multifunction database（多功能数据库）”。这种数据库能够支持常用的MyISAM和InnoDB两种存储引擎。每种存储引擎有各自的特点，适用于不同的应用。</p><ul><li><code>字符集设置</code></li></ul><p>字符集的选择影响着数据库能否正常显示中文字符。因此，要手动（manual）设置字符集，以前一般是GB2312（简体中文），这样才能保证数据库中存储的中文字符能够正常地保存和读取，否则会出现乱码。但是，utf-8是现在通用的标准，所以我们也设置为utf-8。</p><ul><li><code>配置文件</code></li></ul><p>在MySQL服务器安装和配置完成之后，在MySQL主目录（如“C:\Program<br>Files\MySQL\MySQL Server 5.7”）下会生成一个my.ini文件，这是MySQL的选项文件，在MySQL启动时会自动加载该文件中的一些选项，可以修改my.ini来更改默认设置（建议不修改，大神除外）。</p><ul><li><code>数据文件存放位置</code><br>MySQL有一个存放数据库文件的data目录，默认路径为“C:\Documents and Settings\All Users\Application Data\MySQL\ MySQL Server 5.7\data”，<br>在data目录下MySQL为每一个数据库建立一个与数据库同名的文件夹，所有表存放在相应的数据库文件夹下。可以直接拷走存储和移动（强大）。<h2 id="3-2-MySQL服务器的启动和关闭"><a href="#3-2-MySQL服务器的启动和关闭" class="headerlink" title="3.2.MySQL服务器的启动和关闭"></a><code>3.2.MySQL服务器的启动和关闭</code></h2>MySQL服务器安装完成后，可随时通过手工方式在本机上启动和关闭。具体操作如下：</li></ul><ol><li>在Windows开始—运行—打开（Win10可以直接输入）中输入“msc”，出现下图的本地服务列表框。</li><li>然后，选中服务列表中的“MySQL”服务，打开“服务”。此时可执行“关闭”，“暂停”，和“启动”等功能操作。<figure class="image-box">                <img src="6e8acc4bf5a53248b46ad313e450ea8a.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="aed303cbe376402a66a7bb6403373d0f.png" alt title class>                <p></p>            </figure></li></ol><h2 id="3-3-MySQL客户端管理工具"><a href="#3-3-MySQL客户端管理工具" class="headerlink" title="3.3.MySQL客户端管理工具"></a><code>3.3.MySQL客户端管理工具</code></h2><p>正确安装和配置MySQL服务器后，大家可以选用自己熟悉的MySQL客户端管理工具来连接和管理MySQL数据库。<br>常用的MySQL客户端管理工具有如下几种（本人经常使用）：<br>1、命令行界面<br>Windows下打开cmd命令行界面：输入mysql -uroot -p，然后输入密码即可。<br><figure class="image-box">                <img src="e8a3fb29f7a0736ac45d8e5e5cdf6db9.png" alt title class>                <p></p>            </figure><br>2、MySQL图形化管理工具<br>前面已经说过，MySQL经常和PHP连接使用，所以PHPmyadmin就是一种MySQL图形化管理工具，可以从<a href="https://www.phpmyadmin.net/downloads/下载。" target="_blank" rel="noopener">https://www.phpmyadmin.net/downloads/下载。</a><br>Phpmyadmin是使用PHP语言开发的基于web方式的MySQL图形化管理工具，它通过B/S工作模式来连接和操作MySQL服务器。如下图所示：<br><figure class="image-box">                <img src="9f2256006c5d6fa239e35156204869db.png" alt title class>                <p></p>            </figure></p><p>3、Navicat for MySQL <code>推荐</code><br>Navicat是一款强大的数据库管理工具，可以连接和管理多种关系型数据库和NoSQL数据库。下载地址：<a href="https://www.navicat.com/products/navicat-for-mysql" target="_blank" rel="noopener">https://www.navicat.com/products/navicat-for-mysql</a><br>大家可根 据自己的喜好和使用习惯选择管理工具。以上是我常用的几款<br><figure class="image-box">                <img src="a466ec383f5eb59b5f4306931a1c0d78.png" alt title class>                <p></p>            </figure></p>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dubbox 从下载到安装至maven</title>
      <link href="/2018/12/06/dubbox-maven/"/>
      <url>/2018/12/06/dubbox-maven/</url>
      
        <content type="html"><![CDATA[<h1 id="dubbox-从下载到安装至maven"><a href="#dubbox-从下载到安装至maven" class="headerlink" title="dubbox 从下载到安装至maven"></a>dubbox 从下载到安装至maven</h1><p>@(出自本人)</p><h2 id="dobbox简介"><a href="#dobbox简介" class="headerlink" title="dobbox简介"></a>dobbox简介</h2><blockquote><p>Dubbo是一个被国内很多互联网公司广泛使用的开源分布式服务框架，即使从国际视野来看应该也是一个非常全面的SOA基础框架。作为一个重要的技术研究课题，在当当网我们根据自身的需求，为Dubbo实现了一些新的功能，并将其命名为Dubbox （即Dubbo eXtensions）</p></blockquote><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>网址：<a href="https://github.com/dangdangdotcom/dubbox/tree/dubbox-2.8.4">https://github.com/dangdangdotcom/dubbox/tree/dubbox-2.8.4</a></p><p>解压得到<br><figure class="image-box">                <img src="./1536592678723.png" alt title class>                <p></p>            </figure></p><h2 id="用maven编译文件"><a href="#用maven编译文件" class="headerlink" title="用maven编译文件"></a>用maven编译文件</h2><ul><li>打开终端窗口</li><li>执行命令cd 到该目录</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\Programming\Install\dubbox\dubbox-dubbox-<span class="number">2</span>.<span class="number">8</span>.<span class="number">4</span>\dubbox-dubbox-<span class="number">2</span>.<span class="number">8</span>.<span class="number">4</span></span><br></pre></td></tr></table></figure><ul><li>再执行命令</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install -f D:\Programming\Install\dubbox\dubbox-dubbox-<span class="number">2</span>.<span class="number">8</span>.<span class="number">4</span>\dubbox-dubbox-<span class="number">2</span>.<span class="number">8</span>.<span class="number">4</span>\pom.xml -D maven.test.skip=true</span><br></pre></td></tr></table></figure><p>稍等片刻<br><figure class="image-box">                <img src="./1536593412261.png" alt title class>                <p></p>            </figure><br>如图,编译完毕,可以看到,dubbox-dubbox-2.8.4子目录下都有一个target文件夹<br><figure class="image-box">                <img src="./1536593598405.png" alt title class>                <p></p>            </figure></p><h2 id="安装到maven本地仓库中"><a href="#安装到maven本地仓库中" class="headerlink" title="安装到maven本地仓库中"></a>安装到maven本地仓库中</h2><p>执行下面语句</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -Dfile=D:\Programming\Install\dubbox\dubbox-dubbox-<span class="number">2</span>.<span class="number">8</span>.<span class="number">4</span>\dubbox-dubbox-<span class="number">2</span>.<span class="number">8</span>.<span class="number">4</span>\dubbo\target\dubbo-<span class="number">2</span>.<span class="number">8</span>.<span class="number">4</span>.jar -DgroupId=com.alibaba -DartifactId=dubbo -Dversion=<span class="number">2</span>.<span class="number">8</span>.<span class="number">4</span> -Dpackaging=jar -DgeneratePom=true</span><br></pre></td></tr></table></figure><p>结果<br><figure class="image-box">                <img src="./1536631397262.png" alt title class>                <p></p>            </figure><br>执行失败了!!!?<br><figure class="image-box">                <img src="./1536631569879.png" alt title class>                <p></p>            </figure></p><p>稍等,给我一点排错的时间。</p><h4 id="发现错误"><a href="#发现错误" class="headerlink" title="发现错误"></a>发现错误</h4><p>原来window10的<code>powershell</code>下执行命令,路径不能带有 <code>-</code>和<code>空格</code><br>发现错误路径<br><em>D:\Programming\Install\dubbox\dubbox-dubbox-2.8.4\dubbox-dubbox-2.8.4\dubbo\target\dubbo-2.8.4.jar</em></p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><ul><li>进入..\dubbox-dubbox-2.8.4\dubbo</li><li><p>换个路径</p><figure class="image-box">                <img src="./1536632833526.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="./1536633160031.png" alt title class>                <p></p>            </figure></li><li><p>执行命令</p></li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -Dfile=D:\Programming\setup\target\dubbo-<span class="number">2</span>.<span class="number">8</span>.<span class="number">4</span>.jar -DgroupId=com.alibaba -DartifactId=dubbo -Dversion=<span class="number">2</span>.<span class="number">8</span>.<span class="number">4</span> -Dpackaging=jar -DgeneratePom=true</span><br></pre></td></tr></table></figure><ul><li>执行成功的结果<figure class="image-box">                <img src="./1536633300546.png" alt title class>                <p></p>            </figure></li></ul><h2 id="用idea新建项目引入jar包"><a href="#用idea新建项目引入jar包" class="headerlink" title="用idea新建项目引入jar包"></a>用idea新建项目引入jar包</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如图<br><figure class="image-box">                <img src="./1536633948654.png" alt title class>                <p></p>            </figure></p>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dubbox </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lambda 使用---- java语法糖</title>
      <link href="/2018/12/05/lambda-java/"/>
      <url>/2018/12/05/lambda-java/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Java8最值得学习的特性就是Lambda表达式和Stream API，如果有python或者javascript的语言基础，对理解Lambda表达式有很大帮助，因为Java正在将自己变的更高（Sha）级（Gua），更人性化。————可以这么说lambda表达式其实就是实现SAM接口的语法糖。</p></blockquote><h1 id="Lambda语法"><a href="#Lambda语法" class="headerlink" title="Lambda语法"></a>Lambda语法</h1><p>Lambda的语法极为简单，类似如下结构:<br>      <code>(parameters) -&gt; expression</code><br>或者<br>    <code>(parameters) -&gt; { statements; }</code></p><h4 id="Lambda表达式由三部分组成："><a href="#Lambda表达式由三部分组成：" class="headerlink" title="Lambda表达式由三部分组成："></a>Lambda表达式由三部分组成：</h4><ul><li><strong>paramaters</strong>：类似方法中的形参列表，这里的参数是函数式接口里的参数。这里的参数类型可以明确的声明也可不声明而由JVM隐含的推断1。另外当只有一个推断类型时可以省略掉圆括号。</li><li><strong>-&gt;</strong>：可理解为“被用于”的意思</li><li><strong>方法体</strong>：可以是表达式也可以代码块，是函数式接口里方法的实现。代码块可返回一个值或者什么都不反回，这里的代码块块等同于方法的方法体。如果是表达式，也可以返回一个值或者什么都不反回。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//示例1：不需要接受参数，直接返回10</span></span><br><span class="line">()-&gt;<span class="number">10</span></span><br><span class="line"><span class="comment">//示例2：接受两个int类型的参数，并返回这两个参数相加的和</span></span><br><span class="line">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)-&gt;x+y;</span><br><span class="line"><span class="comment">//示例2：接受x,y两个参数，该参数的类型由JVM根据上下文推断出来，并返回两个参数的和</span></span><br><span class="line">(x,y)-&gt;x+y;</span><br><span class="line"><span class="comment">//示例3：接受一个字符串，并将该字符串打印到控制到，不反回结果</span></span><br><span class="line">(String name)-&gt;System.out.println(name);</span><br><span class="line"><span class="comment">//示例4：接受一个推断类型的参数name，并将该字符串打印到控制台</span></span><br><span class="line">name-&gt;System.out.println(name);</span><br><span class="line"><span class="comment">//示例5：接受两个String类型参数，并分别输出，不反回</span></span><br><span class="line">(String name,String sex)-&gt;&#123;System.out.println(name);System.out.println(sex)&#125;</span><br><span class="line"><span class="comment">//示例6：接受一个参数x，并返回该该参数的两倍</span></span><br><span class="line">x-&gt;<span class="number">2</span>*x</span><br></pre></td></tr></table></figure><h1 id="一-匿名函数"><a href="#一-匿名函数" class="headerlink" title="一.匿名函数"></a>一.匿名函数</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lambdaDemo.com.mission;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mission</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/12/3 0003-21:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FunctionDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x+y;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//直接匿名函数</span></span><br><span class="line">  <span class="comment">//(int x,int y)-&gt;&#123;return x+y;&#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//省略方式</span></span><br><span class="line">  <span class="comment">//(x,y)-&gt;x+y;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//使用例子</span></span><br><span class="line">  <span class="comment">//lambda表达式</span></span><br><span class="line">  Runnable run1= ()-&gt;&#123;System.out.println(<span class="string">"run1---------"</span>);&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//普通方法</span></span><br><span class="line">  Runnable run2 =<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"run2---------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    FunctionDemo demo1 =<span class="keyword">new</span> FunctionDemo();</span><br><span class="line">    demo1.run1.run();</span><br><span class="line">    demo1.run2.run();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">run1---------</span><br><span class="line">run2---------</span><br><span class="line"></span><br><span class="line">Process finished with <span class="keyword">exit</span> code <span class="number">0</span></span><br></pre></td></tr></table></figure></p><h2 id="第一个场景应用"><a href="#第一个场景应用" class="headerlink" title="第一个场景应用"></a>第一个场景应用</h2><p>需求:任意2个数的计算</p><p>案例:<br>例一: 方法add(1,2)=1+2=3<br>例二: 方法mult(1,2)=1*2=2</p><h4 id="以前写法"><a href="#以前写法" class="headerlink" title="以前写法"></a>以前写法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lambdaDemo.com.mission;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mission</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/12/4 0004-21:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Calc</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//+</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//*</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mult</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lambdaDemo.com.mission;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mission</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/12/4 0004-21:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Calcimpl</span> <span class="keyword">implements</span> <span class="title">Calc</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x+y;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mult</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x*y;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="lambda写法"><a href="#lambda写法" class="headerlink" title="lambda写法"></a>lambda写法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lambdaDemo.com.mission;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mission</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/12/4 0004-21:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span>  <span class="comment">//FunctionalInterface主要用于编译级错误检查，加上该注解，当你写的接口不符合函数式接口定义的时候，编译器会报错。</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LambaCalc</span> </span>&#123;</span><br><span class="line">  <span class="comment">//有且仅有一个抽象方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="调用方式"><a href="#调用方式" class="headerlink" title="调用方式"></a>调用方式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lambdaDemo.com.mission;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mission</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/12/4 0004-21:19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//一般以前的使用方式</span></span><br><span class="line">    Calc calc=<span class="keyword">new</span> Calcimpl();</span><br><span class="line">    System.out.println(calc.add(<span class="number">3</span>, <span class="number">5</span>));</span><br><span class="line">    System.out.println(<span class="string">"------------------"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//函数式接口</span></span><br><span class="line">    LambaCalc f1=(x, y)-&gt;&#123;<span class="keyword">return</span> x+y;&#125;;</span><br><span class="line">    LambaCalc f2=(x, y)-&gt;x+y;</span><br><span class="line">    System.out.println(f1.calc(<span class="number">3</span>, <span class="number">1</span>));</span><br><span class="line">    System.out.println(<span class="string">"------------------"</span>);</span><br><span class="line">    System.out.println(f2.calc(<span class="number">5</span>, <span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line">------------------</span><br><span class="line"><span class="number">4</span></span><br><span class="line">------------------</span><br><span class="line"><span class="number">11</span></span><br><span class="line"></span><br><span class="line">Process finished with <span class="keyword">exit</span> code <span class="number">0</span></span><br></pre></td></tr></table></figure></p><h1 id="二-容器遍历方式"><a href="#二-容器遍历方式" class="headerlink" title="二.容器遍历方式"></a>二.容器遍历方式</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lambdaDemo.com.mission;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mission</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/12/4 0004-21:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FunctionTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testList</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//构造一个容器</span></span><br><span class="line">    String[] args =&#123;<span class="string">"player1"</span>,<span class="string">"player2"</span>,<span class="string">"player3"</span>,<span class="string">"player4"</span>,<span class="string">"player5"</span>&#125;;</span><br><span class="line">    <span class="comment">//转为List集合</span></span><br><span class="line">    List&lt;String&gt; playerList= Arrays.asList(args);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//以前遍历方式</span></span><br><span class="line">    <span class="comment">//外部方式循环,客户代码</span></span><br><span class="line">    <span class="keyword">for</span> (String player : playerList) &#123;</span><br><span class="line">      System.out.println(player);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"--------------------------"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//lambda方式</span></span><br><span class="line">    <span class="comment">//内循环,JDK自己处理</span></span><br><span class="line">    playerList.forEach((player)-&gt;&#123; System.out.println(player); &#125;);</span><br><span class="line">    System.out.println(<span class="string">"--------------------------"</span>);</span><br><span class="line">    playerList.forEach((player)-&gt; System.out.println(player) );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">player1</span><br><span class="line">player2</span><br><span class="line">player3</span><br><span class="line">player4</span><br><span class="line">player5</span><br><span class="line">--------------------------</span><br><span class="line">player1</span><br><span class="line">player2</span><br><span class="line">player3</span><br><span class="line">player4</span><br><span class="line">player5</span><br><span class="line">--------------------------</span><br><span class="line">player1</span><br><span class="line">player2</span><br><span class="line">player3</span><br><span class="line">player4</span><br><span class="line">player5</span><br><span class="line"></span><br><span class="line">Process finished with <span class="keyword">exit</span> code <span class="number">0</span></span><br></pre></td></tr></table></figure></p><p>三.容器内容的删除<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDeleteList</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="comment">//构造一个容器</span></span><br><span class="line">  String[] args =&#123;<span class="string">"player1"</span>,<span class="string">"player2"</span>,<span class="string">"player3"</span>,<span class="string">"player4"</span>,<span class="string">"player5"</span>&#125;;</span><br><span class="line">  <span class="comment">//转为List集合...(若用Arrays.asList(args)转换会报错,原因这样list的iterator不支持remove()方法)</span></span><br><span class="line">  List&lt;String&gt; playerList= <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">  <span class="keyword">for</span> (String player : args) &#123;</span><br><span class="line">    playerList.add(player);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  System.out.println(<span class="string">"-------------原来-------------"</span>);</span><br><span class="line">  playerList.forEach((player)-&gt; System.out.println(player) );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//1.以前删除容器数据方式</span></span><br><span class="line">  Iterator&lt;String&gt; it = playerList.iterator();</span><br><span class="line">  <span class="keyword">while</span> (it.hasNext())&#123;</span><br><span class="line">    String player=it.next();</span><br><span class="line">    <span class="keyword">if</span> (player.equals(<span class="string">"player2"</span>))&#123;</span><br><span class="line">      it.remove();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//2.新方式removeif</span></span><br><span class="line">  playerList.removeIf(<span class="keyword">new</span> Predicate&lt;String&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">test</span><span class="params">(String player)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> player.equals(<span class="string">"player3"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//3.removeif 的lambda表达式</span></span><br><span class="line">  playerList.removeIf((player)-&gt;player.equals(<span class="string">"player4"</span>));</span><br><span class="line"></span><br><span class="line">  System.out.println(<span class="string">"------------删除后------------"</span>);</span><br><span class="line">  playerList.forEach((player)-&gt; System.out.println(player) );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>效果<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-------------原来-------------</span><br><span class="line">player1</span><br><span class="line">player2</span><br><span class="line">player3</span><br><span class="line">player4</span><br><span class="line">player5</span><br><span class="line">------------删除后------------</span><br><span class="line">player1</span><br><span class="line">player5</span><br><span class="line"></span><br><span class="line">Process finished with <span class="keyword">exit</span> code <span class="number">0</span></span><br></pre></td></tr></table></figure></p><h1 id="四-集合Stream的操作"><a href="#四-集合Stream的操作" class="headerlink" title="四.集合Stream的操作"></a>四.集合Stream的操作</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lambdaDemo.com.mission;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mission</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/12/5 0005-16:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CollectionStreamTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testStream</span><span class="params">()</span></span>&#123;</span><br><span class="line">      Integer[] nums=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="keyword">null</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="keyword">null</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    List&lt;Integer&gt; list= Arrays.asList(nums);</span><br><span class="line">    <span class="keyword">int</span> sum =<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//以前累加方式</span></span><br><span class="line">    <span class="keyword">for</span> (Integer num : list) &#123;</span><br><span class="line">      <span class="keyword">if</span> (num==<span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      sum =sum+num;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">"old sum -&gt;"</span>+sum);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新方式,流方式,lambda实现</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链条操作</span></span><br><span class="line"><span class="comment">     * 1.list.stream() 创建流</span></span><br><span class="line"><span class="comment">     * 2.filter(x-&gt;x!=null) 过滤 Stream 中的元素</span></span><br><span class="line"><span class="comment">     * 3.reduce((s,x)-&gt;s+x) 从一组值中生成一个新的值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    sum = list.stream().filter(x-&gt;x!=<span class="keyword">null</span>).reduce((s,x)-&gt;s+x).get();</span><br><span class="line">    System.out.println(<span class="string">"stream sum -&gt;"</span>+sum);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Stream 中主要包含如下几个方法：</p><p>方法名    简介</p><table><thead><tr><th>collect(toList())</th><th style="text-align:right">通过 Stream 生成一个列表</th></tr></thead><tbody><tr><td>map</td><td style="text-align:right">将流中的一个值转换成一个新的值</td></tr><tr><td>filter</td><td style="text-align:right">过滤 Stream 中的元素</td></tr><tr><td>flatMap</td><td style="text-align:right">将多个 Stream 连接成一个 Stream</td></tr><tr><td>max</td><td style="text-align:right">求最大值</td></tr><tr><td>min</td><td style="text-align:right">求最小值</td></tr><tr><td>reduce</td><td style="text-align:right">从一组值中生成一个新的值</td></tr></tbody></table><p>上面就是 Stream 中包含的几个主要方法，下面逐一对其介绍：</p><h3 id="collect-toList-amp-filter"><a href="#collect-toList-amp-filter" class="headerlink" title="collect(toList()) &amp; filter"></a>collect(toList()) &amp; filter</h3><p>collect(toList()) 的作用是通过一个 Stream 对象生成 List 对象，案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; list = Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">List&lt;Integer&gt; result = list.stream().filter((value) -&gt; value &gt; <span class="number">2</span>).collect(toList());</span><br><span class="line">result.forEach((value) -&gt; System.out.print(value));</span><br></pre></td></tr></table></figure><p>上面的代码先创建了一个 List 对象并初始化，然后筛选出大于 2 的值，输出。<br>filter 方法的作用是过滤 Stream 中的元素，filter 方法是一个高阶函数，接收一个函数接口作为参数，此高阶函数返回一个 boolean 值，返回 true 的元素会保留下来；<br>collect(toList()) 方法将 filter 操作返回的 Stream 生成一个 List。</p><p>高阶函数：接收或返回一个函数接口的函数称为高阶函数。<br>函数接口：只包含一个函数的接口成为函数接口。</p><h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><p>map 函数的作用是将流中的一个值转换成一个新的值，举个例子，我们要将一个 List 转换成 List ，那么就可以使用 map 方法，示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; list = Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">List&lt;String&gt; result = list.stream().map(value -&gt; String.format(<span class="string">"String:%s"</span>, value)).collect(toList());</span><br><span class="line">result.forEach(System.out::print);</span><br></pre></td></tr></table></figure><p>map 方法将 Integer 元素转换成 String 并使用 collect(toList()) 方法生成一个新的 List。</p><p>System.out::print 是 (value) -&gt; System.out.print(value) 的简化版写法。</p><h3 id="flatMap"><a href="#flatMap" class="headerlink" title="flatMap"></a>flatMap</h3><p>flatMap：将多个 Stream 连接成一个 Stream，这个怎么理解呢，举个栗子：<br>首先定义一个 List 对象，将这个对象中的每一个 String 都分割成一个字母并生成一个新的 List 对象，代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">"abc"</span>, <span class="string">"def"</span>, <span class="string">"ghi"</span>);</span><br><span class="line">List&lt;Character&gt; result = list.stream().flatMap(value -&gt; &#123;</span><br><span class="line">    <span class="keyword">char</span>[] chars = value.toCharArray();</span><br><span class="line">    Character[] characters = <span class="keyword">new</span> Character[chars.length];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; characters.length; i++)&#123;</span><br><span class="line">        characters[i] = chars[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Stream.of(characters);</span><br><span class="line">&#125;).collect(toList());</span><br><span class="line">result.forEach(System.out::println);</span><br></pre></td></tr></table></figure><p>上面代码先遍历 list ，通过 flatMap 函数将每个 String 元素都生成一个新的 Stream 并将这些 Stream 连接成一个新的 Stream。</p><h3 id="max-amp-min"><a href="#max-amp-min" class="headerlink" title="max&amp;min"></a>max&amp;min</h3><p>求最大值最小值，这个很好理解了，直接看代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; list = Arrays.asList(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">Comparator&lt;Integer&gt; comparator = (o1, o2) -&gt; o1.compareTo(o2);</span><br><span class="line">System.out.println(list.stream().min(comparator).get());</span><br><span class="line">System.out.println(list.stream().max(comparator).get());</span><br></pre></td></tr></table></figure><p>min 和 max 函数需要一个 Comparator 对象为参数作为比对依据。</p><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3><p>从一组值中生成一个新的值，reduce 函数其实用途非常广泛，作用也比较大，我们举一个累加的例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; list = Arrays.asList(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">int</span> count = list.stream().reduce(<span class="number">0</span>, (acc, item) -&gt; acc + item).intValue();</span><br><span class="line">System.out.println(count);</span><br></pre></td></tr></table></figure><p>reduce 函数的一个参数为循环的初始值，这里计算累加时初始值为 0，acc 代表已经计算的结果，item 表示循环的每个元素。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 案例一:小写转换为大写</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCase</span><span class="params">()</span></span>&#123;</span><br><span class="line">  String[] str =&#123;<span class="string">"test"</span>,<span class="string">"hello"</span>,<span class="string">"world"</span>,<span class="string">"java"</span>,<span class="string">"tom"</span>,<span class="string">"C"</span>,<span class="string">"javascript"</span>&#125;;</span><br><span class="line"></span><br><span class="line">    List&lt;String&gt; list=Arrays.asList(str);</span><br><span class="line">    list.stream().map(x-&gt;x.toUpperCase()).forEach(x-&gt; System.out.println(x));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 案例二:元素扩大两倍</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTwoFold</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Integer[] data =&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    List&lt;Integer&gt; list=Arrays.asList(data);</span><br><span class="line">    list.stream().map(x-&gt;<span class="number">2</span>*x).forEach(x-&gt;System.out.println(x));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 案例三:求和</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSum</span><span class="params">()</span></span>&#123;</span><br><span class="line">  Integer[] data =&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    List&lt;Integer&gt; list =Arrays.asList(data);</span><br><span class="line">    <span class="keyword">int</span> num =list.stream().reduce((sum,x)-&gt;sum+x).get();</span><br><span class="line">  System.out.println(num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TEST</span><br><span class="line">HELLO</span><br><span class="line">WORLD</span><br><span class="line">JAVA</span><br><span class="line">TOM</span><br><span class="line">C</span><br><span class="line">JAVASCRIPT</span><br></pre></td></tr></table></figure></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><h4 id="map和reduce总结"><a href="#map和reduce总结" class="headerlink" title="map和reduce总结"></a>map和reduce总结</h4><ul><li>map是针对每个数据处理</li><li>reduce是针对集合最后处理</li><li>map()进行数据重写组合</li><li>reduce()是对集合中所有数据变为一个结果</li></ul><h1 id="五-Function函数使用"><a href="#五-Function函数使用" class="headerlink" title="五.Function函数使用"></a>五.Function函数使用</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 输入一个整数类型,返回一个字符串类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testConvert</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="comment">//以前的方法</span></span><br><span class="line">  Function&lt;Integer,String&gt; fun1 =<span class="keyword">new</span> Function&lt;Integer, String&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">apply</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> String.valueOf(integer);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  String s1=fun1.apply(<span class="number">100</span>);</span><br><span class="line">  System.out.println(s1);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//lambda使用</span></span><br><span class="line">  Function&lt;Integer,String&gt; fun2=x-&gt;String.valueOf(x);</span><br><span class="line">  String s2=fun2.apply(<span class="number">2</span>);</span><br><span class="line">  System.out.println(s2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">100</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line">Process finished with <span class="keyword">exit</span> code <span class="number">0</span></span><br></pre></td></tr></table></figure></p><h1 id="六-Consumer用法"><a href="#六-Consumer用法" class="headerlink" title="六.Consumer用法"></a>六.Consumer用法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Consumer&lt;T&gt;</span></span><br><span class="line"><span class="comment"> * 定义:</span></span><br><span class="line"><span class="comment"> *   代表了接受一个输入参数并且无返回的操作,如果某一类操作不需要返回接口,可以对该类操作抽取逻辑</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 方法:</span></span><br><span class="line"><span class="comment"> * 无返回函数操作 void accept(T t);</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 案例:</span></span><br><span class="line"><span class="comment"> * 遍历容器forEach()方法</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *     default void forEach(Consumer&lt;? super T&gt; action) &#123;</span></span><br><span class="line"><span class="comment"> *         Objects.requireNonNull(action);</span></span><br><span class="line"><span class="comment"> *         for (T t : this) &#123;</span></span><br><span class="line"><span class="comment"> *             action.accept(t);</span></span><br><span class="line"><span class="comment"> *         &#125;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testForEach</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String[] str=&#123;<span class="string">"A1"</span>,<span class="string">"B2"</span>,<span class="string">"C3"</span>,<span class="string">"D4"</span>&#125;;</span><br><span class="line">  List&lt;String&gt; list= Arrays.asList(str);</span><br><span class="line">  list.forEach(<span class="keyword">new</span> Consumer&lt;String&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">accept</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">      System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  System.out.println(<span class="string">"----------------------------"</span>);</span><br><span class="line">  list.forEach((x)-&gt; System.out.println(x));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果:<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">A1</span><br><span class="line">B2</span><br><span class="line">C3</span><br><span class="line">D4</span><br><span class="line">----------------------------</span><br><span class="line">A1</span><br><span class="line">B2</span><br><span class="line">C3</span><br><span class="line">D4</span><br><span class="line"></span><br><span class="line">Process finished with <span class="keyword">exit</span> code <span class="number">0</span></span><br></pre></td></tr></table></figure></p><h1 id="七-Predicte用法"><a href="#七-Predicte用法" class="headerlink" title="七.Predicte用法"></a>七.Predicte用法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *Predicte&lt;T&gt;</span></span><br><span class="line"><span class="comment"> * 定义:</span></span><br><span class="line"><span class="comment"> *  Predicte函数式接口的主要作用是提供一个test方法,接受一个参数返回布尔类型</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 方法:</span></span><br><span class="line"><span class="comment"> *  函数操作boolean test(T t)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  案例:</span></span><br><span class="line"><span class="comment"> *  list.stream().filter()方法</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@FunctionalInterface</span></span></span><br><span class="line"><span class="comment"> * public interface Predicate&lt;T&gt; &#123;</span></span><br><span class="line"><span class="comment"> *    boolean test(T t);</span></span><br><span class="line"><span class="comment"> *    ......</span></span><br><span class="line"><span class="comment"> *  &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFitler</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="comment">//容器中数据过滤掉</span></span><br><span class="line">  String[] str=&#123;<span class="string">"A1"</span>,<span class="string">"B2"</span>,<span class="string">"C3"</span>,<span class="string">"D4"</span>&#125;;</span><br><span class="line">  List&lt;String&gt; list= Arrays.asList(str);</span><br><span class="line"></span><br><span class="line">  list.stream().filter(<span class="keyword">new</span> Predicate&lt;String&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">test</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> !s.equals(<span class="string">"C3"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).forEach(t-&gt; System.out.println(t));</span><br><span class="line"></span><br><span class="line">  System.out.println(<span class="string">"----------------------------"</span>);</span><br><span class="line">  list.stream().filter(x-&gt;!x.equals(<span class="string">"D4"</span>)).forEach(x-&gt; System.out.println(x));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">A1</span><br><span class="line">B2</span><br><span class="line">D4</span><br><span class="line">----------------------------</span><br><span class="line">A1</span><br><span class="line">B2</span><br><span class="line">C3</span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure></p><p>本文到此结束</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> lambda </tag>
            
            <tag> 语法糖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法手册</title>
      <link href="/2018/09/22/markdown-manual/"/>
      <url>/2018/09/22/markdown-manual/</url>
      
        <content type="html"><![CDATA[<h2 id="初识Markdown"><a href="#初识Markdown" class="headerlink" title="初识Markdown"></a>初识Markdown</h2><blockquote><p>Markdown 是一种用来写作的轻量级 标记语言，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。</p></blockquote><h2 id="使用-Markdown-的优点"><a href="#使用-Markdown-的优点" class="headerlink" title="使用 Markdown 的优点"></a>使用 Markdown 的优点</h2><blockquote><p>专注你的文字内容而不是排版样式，安心写作。<br>轻松的导出 HTML、PDF 和本身的 .md 文件。<br>纯文本内容，兼容所有的文本编辑器与字处理软件。<br>随时修改你的文章版本，不必像字处理软件生成若干文件版本导致混乱。<br>可读、直观、学习成本低。</p></blockquote><h2 id="使用-Markdown-的缺点"><a href="#使用-Markdown-的缺点" class="headerlink" title="使用 Markdown 的缺点"></a>使用 Markdown 的缺点</h2><blockquote><p>没有像word一样格式的花哨。<br>不支持复杂的格式（如表格等）。<br>有太多不兼容的方言。由于原始的Markdown支持的格式有限，所以出现了很多不同的扩展，这些扩展之间的不兼容性是一个问题。<br>markdown没有被标准化，其版本较多，给人感觉有点混乱，因为github的关系，当前比较流行的是markdown是gfm。</p></blockquote><blockquote><p><em>We believe that writing is about content, about what you want to say – not about fancy formatting. </em><br>  <em>— Ulysses for Mac</em>    (我们坚信写作写的是内容，所思所想，而不是花样格式。–麦克尤利西斯)</p></blockquote><h2 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a><em>Markdown语法</em></h2><h3 id="1-斜体和粗体"><a href="#1-斜体和粗体" class="headerlink" title="1. 斜体和粗体"></a>1. 斜体和粗体</h3><p>使用 * 和 ** 表示斜体和粗体。</p><p>示例：</p><p>这是 <em>斜体</em>，这是 <strong>粗体</strong>。</p><h3 id="2-分级标题"><a href="#2-分级标题" class="headerlink" title="2. 分级标题"></a>2. 分级标题</h3><p>使用 === 表示一级标题，使用 — 表示二级标题。</p><p>示例：</p><h1 id="这是一个一级标题"><a href="#这是一个一级标题" class="headerlink" title="这是一个一级标题"></a>这是一个一级标题</h1><h2 id="这是一个二级标题"><a href="#这是一个二级标题" class="headerlink" title="这是一个二级标题"></a>这是一个二级标题</h2><h3 id="这是一个三级标题"><a href="#这是一个三级标题" class="headerlink" title="这是一个三级标题"></a>这是一个三级标题</h3><p>你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：# H1, ## H2, ### H3，#### H4。</p><h3 id="3-外链接"><a href="#3-外链接" class="headerlink" title="3. 外链接"></a>3. 外链接</h3><p>使用 [描述](链接地址) 为文字增加外链接。</p><p>示例：</p><p>这是去往 <a href="http://missionodd.github.io" target="_blank" rel="noopener">本人博客</a> 的链接。</p><h3 id="4-无序列表"><a href="#4-无序列表" class="headerlink" title="4. 无序列表"></a>4. 无序列表</h3><p>使用 *，+，- 表示无序列表。</p><p>示例：</p><ul><li>无序列表项 一</li><li>无序列表项 二</li><li>无序列表项 三</li></ul><h3 id="5-有序列表"><a href="#5-有序列表" class="headerlink" title="5. 有序列表"></a>5. 有序列表</h3><p>使用数字和点表示有序列表。</p><p>示例：</p><ol><li>有序列表项 一</li><li>有序列表项 二</li><li>有序列表项 三</li></ol><h3 id="6-文字引用"><a href="#6-文字引用" class="headerlink" title="6. 文字引用"></a>6. 文字引用</h3><p>使用 &gt; 表示文字引用。</p><p>示例：</p><blockquote><p>野火烧不尽，春风吹又生。</p></blockquote><h3 id="7-行内代码块"><a href="#7-行内代码块" class="headerlink" title="7. 行内代码块"></a>7. 行内代码块</h3><p>使用 `代码` 表示行内代码块。</p><p>示例：</p><p>让我们聊聊 <code>html</code>。</p><h3 id="8-代码块"><a href="#8-代码块" class="headerlink" title="8.  代码块"></a>8.  代码块</h3><p>使用 四个缩进空格 表示代码块。</p><p>示例：</p><pre><code>这是一个代码块，此行左侧有四个不可见的空格。</code></pre><h3 id="9-插入图像"><a href="#9-插入图像" class="headerlink" title="9.  插入图像"></a>9.  插入图像</h3><p>使用 ![描述](图片链接地址) 插入图像。</p><p>示例：</p><figure class="image-box">                <img src="./img/avatar.jpg" alt="我的头像" title class>                <p>我的头像</p>            </figure><h1 id="Markdown-高阶语法手册"><a href="#Markdown-高阶语法手册" class="headerlink" title="Markdown 高阶语法手册"></a>Markdown 高阶语法手册</h1><h3 id="1-内容目录-本博客失效"><a href="#1-内容目录-本博客失效" class="headerlink" title="1. 内容目录 本博客失效"></a>1. 内容目录 <del>本博客失效</del></h3><p>在段落中填写 <code>[TOC]</code> 以显示全文内容的目录结构。</p><p> [TOC]</p><h3 id="2-标签分类"><a href="#2-标签分类" class="headerlink" title="2. 标签分类"></a>2. 标签分类</h3><p>在编辑区任意行的列首位置输入以下代码给文稿标签：</p><p>标签： 数学 英语 Markdown</p><p>或者</p><p>Tags： 数学 英语 Markdown</p><h3 id="3-删除线"><a href="#3-删除线" class="headerlink" title="3. 删除线"></a>3. 删除线</h3><p>使用 ~~ 表示删除线。</p><p><del>这是一段错误的文本。</del></p><h3 id="4-注脚-本博客失效"><a href="#4-注脚-本博客失效" class="headerlink" title="4. 注脚 本博客失效"></a>4. 注脚 <del>本博客失效</del></h3><p>使用 [^keyword] 表示注脚。</p><p>这是一个注脚[^1]的样例。</p><p>这是第二个注脚[^2]的样例。</p><h3 id="5-LaTeX-公式"><a href="#5-LaTeX-公式" class="headerlink" title="5. LaTeX 公式"></a>5. LaTeX 公式</h3><p>$ 表示行内公式：</p><p>质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</p><p>$$ 表示整行公式：</p><p>$$\sum_{i=1}^n a_i=0$$</p><p>$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</p><p>$$\begin{equation}<br>[a, b, c]=\left|<br>\begin{array}{ccc}<br>  a_1&amp; a_2  &amp; a_3  \\<br> b_1 &amp;b_2   &amp; b_3  \\<br> c_1 &amp;c_2   &amp;c_3<br>\end{array}<br>\right|<br>\end{equation}$$</p><p>访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 参考更多使用方法。</p><h3 id="6-加强的代码块"><a href="#6-加强的代码块" class="headerlink" title="6. 加强的代码块"></a>6. 加强的代码块</h3><p>支持四十一种编程语言的语法高亮的显示，行号显示。</p><p>非代码示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install vim-gnome</span><br></pre></td></tr></table></figure><p>Python 示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span><span class="params">(param1=<span class="string">''</span>, param2=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="string">'''A docstring'''</span></span><br><span class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Greater'</span></span><br><span class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span>) <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">'''interpreter</span></span><br><span class="line"><span class="string"><span class="meta">... </span>prompt'''</span></span><br></pre></td></tr></table></figure><p>JavaScript 示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* nth element in the fibonacci series.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param </span>n &gt;= 0</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return </span>the nth element, &gt;= 0.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fib</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">1</span>, b = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">var</span> tmp;</span><br><span class="line">  <span class="keyword">while</span> (--n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">    tmp = a;</span><br><span class="line">    a += b;</span><br><span class="line">    b = tmp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(fib(<span class="number">10</span>));</span><br></pre></td></tr></table></figure><h3 id="7-流程图"><a href="#7-流程图" class="headerlink" title="7. 流程图"></a>7. 流程图</h3><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><div id="flowchart-0" class="flow-chart"></div><h4 id="更多语法参考：流程图语法参考"><a href="#更多语法参考：流程图语法参考" class="headerlink" title="更多语法参考：流程图语法参考"></a>更多语法参考：<a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="noopener">流程图语法参考</a></h4><h3 id="8-序列图-本博客失效"><a href="#8-序列图-本博客失效" class="headerlink" title="8. 序列图  本博客失效"></a>8. 序列图  <del>本博客失效</del></h3><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Title: Here is a title</span><br><span class="line">A-&gt;B: Normal line</span><br><span class="line">B--&gt;C: Dashed line</span><br><span class="line">C-&gt;&gt;D: Open arrow</span><br><span class="line">D--&gt;&gt;A: Dashed open arrow</span><br></pre></td></tr></table></figure><h4 id="更多语法参考：序列图语法参考"><a href="#更多语法参考：序列图语法参考" class="headerlink" title="更多语法参考：序列图语法参考"></a>更多语法参考：<a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="noopener">序列图语法参考</a></h4><h3 id="9-甘特图-本博客失效"><a href="#9-甘特图-本博客失效" class="headerlink" title="9. 甘特图  本博客失效"></a>9. 甘特图  <del>本博客失效</del></h3><p>甘特图内在思想简单。基本是一条线条图，横轴表示时间，纵轴表示活动（项目），线条表示在整个期间上计划和实际的活动完成情况。它直观地表明任务计划在什么时候进行，及实际进展与计划要求的对比。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">title 项目开发流程</span><br><span class="line">section 项目确定</span><br><span class="line">    需求分析       :a1, 2016-06-22, 3d</span><br><span class="line">    可行性报告     :after a1, 5d</span><br><span class="line">    概念验证       : 5d</span><br><span class="line">section 项目实施</span><br><span class="line">    概要设计      :2016-07-05  , 5d</span><br><span class="line">    详细设计      :2016-07-08, 10d</span><br><span class="line">    编码          :2016-07-15, 10d</span><br><span class="line">    测试          :2016-07-22, 5d</span><br><span class="line">section 发布验收</span><br><span class="line">    发布: 2d</span><br><span class="line">    验收: 3d</span><br></pre></td></tr></table></figure><h4 id="更多语法参考：甘特图语法参考"><a href="#更多语法参考：甘特图语法参考" class="headerlink" title="更多语法参考：甘特图语法参考"></a>更多语法参考：<a href="https://knsv.github.io/mermaid/#gant-diagrams" target="_blank" rel="noopener">甘特图语法参考</a></h4><h3 id="10-Mermaid-流程图-本博客失效"><a href="#10-Mermaid-流程图-本博客失效" class="headerlink" title="10. Mermaid 流程图  本博客失效"></a>10. Mermaid 流程图  <del>本博客失效</del></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A[Hard edge] --&gt;|Link text| B(Round edge)</span><br><span class="line">B --&gt; C&#123;Decision&#125;</span><br><span class="line">C --&gt;|One| D[Result one]</span><br><span class="line">C --&gt;|Two| E[Result two]</span><br></pre></td></tr></table></figure><h4 id="更多语法参考：Mermaid-流程图语法参考"><a href="#更多语法参考：Mermaid-流程图语法参考" class="headerlink" title="更多语法参考：Mermaid 流程图语法参考"></a>更多语法参考：<a href="https://knsv.github.io/mermaid/#flowcharts-basic-syntax" target="_blank" rel="noopener">Mermaid 流程图语法参考</a></h4><h3 id="11-Mermaid-序列图-本博客失效"><a href="#11-Mermaid-序列图-本博客失效" class="headerlink" title="11. Mermaid 序列图  本博客失效"></a>11. Mermaid 序列图  <del>本博客失效</del></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;John: Hello John, how are you?</span><br><span class="line">loop every minute</span><br><span class="line">    John--&gt;Alice: Great!</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h4 id="更多语法参考：Mermaid-序列图语法参考"><a href="#更多语法参考：Mermaid-序列图语法参考" class="headerlink" title="更多语法参考：Mermaid 序列图语法参考"></a>更多语法参考：<a href="https://knsv.github.io/mermaid/#sequence-diagrams" target="_blank" rel="noopener">Mermaid 序列图语法参考</a></h4><h3 id="12-表格支持"><a href="#12-表格支持" class="headerlink" title="12. 表格支持"></a>12. 表格支持</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目        | 价格   |  数量  |</span><br><span class="line">| --------   | -----:  | :----:  |</span><br><span class="line">| 计算机     | \$1600 |   5     |</span><br><span class="line">| 手机        |   \$12   |   12   |</span><br><span class="line">| 管线        |    \$1    |  234  |</span><br></pre></td></tr></table></figure><table><thead><tr><th>项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td>计算机</td><td style="text-align:right">\$1600</td><td style="text-align:center">5</td></tr><tr><td>手机</td><td style="text-align:right">\$12</td><td style="text-align:center">12</td></tr><tr><td>管线</td><td style="text-align:right">\$1</td><td style="text-align:center">234</td></tr></tbody></table><h3 id="13-定义型列表"><a href="#13-定义型列表" class="headerlink" title="13. 定义型列表"></a>13. 定义型列表</h3><p>名词 1<br>:   定义 1（左侧有一个可见的冒号和四个不可见的空格）</p><p>代码块 2<br>:   这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）</p><pre><code>代码块（左侧有八个不可见的空格）</code></pre><h3 id="14-Html-标签"><a href="#14-Html-标签" class="headerlink" title="14. Html 标签"></a>14. Html 标签</h3><p>本站支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th rowspan=&quot;2&quot;&gt;值班人员&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;星期一&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;星期二&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;星期三&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;李强&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;张明&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;王平&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure></p><table><br>    <tr><br>        <th rowspan="2">值班人员</th><br>        <th>星期一</th><br>        <th>星期二</th><br>        <th>星期三</th><br>    </tr><br>    <tr><br>        <td>李强</td><br>        <td>张明</td><br>        <td>王平</td><br>    </tr><br></table><h3 id="15-内嵌图标"><a href="#15-内嵌图标" class="headerlink" title="15. 内嵌图标"></a>15. 内嵌图标</h3><p>本站的图标系统对外开放，在文档中输入</p><pre><code>&lt;i class=&quot;icon icon-weibo&quot;&gt;&lt;/i&gt;</code></pre><p>即显示微博的图标： <i class="icon icon-weibo icon-2x"></i></p><p>替换 上述 <code>i 标签</code> 内的 <code>icon-weibo</code> 以显示不同的图标，例如：</p><pre><code>&lt;i class=&quot;icon icon-renren&quot;&gt;&lt;/i&gt;</code></pre><p>即显示人人的图标： <i class="icon icon-renren icon-2x"></i></p><p>更多的图标和玩法可以参看 <a href="http://fortawesome.github.io/Font-Awesome/3.2.1/icons/" target="_blank" rel="noopener">font-awesome</a> 官方网站。</p><h3 id="16-待办事宜-Todo-列表"><a href="#16-待办事宜-Todo-列表" class="headerlink" title="16. 待办事宜 Todo 列表"></a>16. 待办事宜 Todo 列表</h3><p>使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- [ ] **Markdown 开发**</span><br><span class="line">    - [ ] 改进渲染算法，使用局部渲染技术提高渲染效率</span><br><span class="line">    - [ ] 支持以 PDF 格式导出文稿</span><br><span class="line">    - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments)</span><br><span class="line">    - [x] 改进 LaTex 功能</span><br><span class="line">        - [x] 修复 LaTex 公式渲染问题</span><br><span class="line">        - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers)</span><br><span class="line">- [ ] **七月旅行准备**</span><br><span class="line">    - [ ] 准备邮轮上需要携带的物品</span><br><span class="line">    - [ ] 浏览日本免税店的物品</span><br><span class="line">    - [x] 购买蓝宝石公主号七月一日的船票</span><br></pre></td></tr></table></figure></p><p>对应显示如下待办事宜 Todo 列表：</p><ul><li style="list-style: none"><input type="checkbox"> <strong>Markdown 开发</strong><ul><li style="list-style: none"><input type="checkbox"> 改进渲染算法，使用局部渲染技术提高渲染效率</li><li style="list-style: none"><input type="checkbox"> 支持以 PDF 格式导出文稿</li><li style="list-style: none"><input type="checkbox" checked> 新增Todo列表功能 <a href="https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments">语法参考</a></li><li style="list-style: none"><input type="checkbox" checked> 改进 LaTex 功能<ul><li style="list-style: none"><input type="checkbox" checked> 修复 LaTex 公式渲染问题</li><li style="list-style: none"><input type="checkbox" checked> 新增 LaTex 公式编号功能 <a href="http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers" target="_blank" rel="noopener">语法参考</a></li></ul></li></ul></li><li style="list-style: none"><input type="checkbox"> <strong>七月旅行准备</strong><ul><li style="list-style: none"><input type="checkbox"> 准备邮轮上需要携带的物品</li><li style="list-style: none"><input type="checkbox"> 浏览日本免税店的物品</li><li style="list-style: none"><input type="checkbox" checked> 购买蓝宝石公主号七月一日的船票</li></ul></li></ul><h3 id="17-更多-Hexo-写作语法"><a href="#17-更多-Hexo-写作语法" class="headerlink" title="17. 更多 Hexo 写作语法"></a>17. 更多 Hexo 写作语法</h3><ul><li><a href="https://hexo.io/zh-cn/docs/writing" target="_blank" rel="noopener">写作</a></li><li><a href="https://hexo.io/zh-cn/docs/front-matter" target="_blank" rel="noopener">Front-matter</a></li><li><a href="https://hexo.io/zh-cn/docs/tag-plugins" target="_blank" rel="noopener">标签插件（Tag Plugins）</a></li><li><a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="noopener">资源文件夹</a></li><li><a href="https://hexo.io/zh-cn/docs/data-files" target="_blank" rel="noopener">数据文件</a></li></ul><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li><a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#-markdown-高阶语法手册" target="_blank" rel="noopener">https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#-markdown-高阶语法手册</a></li><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a></li><li><a href="https://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="noopener">https://www.jianshu.com/p/1e402922ee32/</a><br><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Start:>https://www.zybuluo.comio=>inputoutput: verificationop=>operation: Your Operationcond=>condition: Yes or No?sub=>subroutine: Your Subroutinee=>endst->io->op->condcond(yes)->econd(no)->sub->io</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script></li></ul>]]></content>
      
      
      <categories>
          
          <category> 文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> 写作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/09/01/hello-world/"/>
      <url>/2018/09/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1472480890&auto=1&height=66"></iframe><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><h3 id="Test-Java"><a href="#Test-Java" class="headerlink" title="Test Java"></a>Test Java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"Hello World"</span>);</span><br></pre></td></tr></table></figure><h3 id="Test-node-js"><a href="#Test-node-js" class="headerlink" title="Test node.js"></a>Test node.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Prism = <span class="built_in">require</span>(<span class="string">'prismjs'</span>);</span><br><span class="line"><span class="keyword">var</span> loadLanguages = <span class="built_in">require</span>(<span class="string">'prismjs/components/'</span>);</span><br><span class="line">loadLanguages([<span class="string">'haml'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// The code snippet you want to highlight, as a string</span></span><br><span class="line"><span class="keyword">var</span> code = <span class="string">"= ['hi', 'there', 'reader!'].join \" \""</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns a highlighted HTML string</span></span><br><span class="line"><span class="keyword">var</span> html = Prism.highlight(code, Prism.languages.haml, <span class="string">'haml'</span>);</span><br></pre></td></tr></table></figure><h3 id="Test-flowchart-js"><a href="#Test-flowchart-js" class="headerlink" title="Test flowchart.js"></a>Test flowchart.js</h3><div id="flowchart-0" class="flow-chart"></div><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><p><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Start|past:>http://www.google.com[blank]e=>end: End:>http://www.google.comop1=>operation: My Operation|pastop2=>operation: Stuff|currentsub1=>subroutine: My Subroutine|invalidcond=>condition: Yesor No?|approved:>http://www.google.comc2=>condition: Good idea|rejectedio=>inputoutput: catch something...|requestst->op1(right)->condcond(yes, right)->c2cond(no)->sub1(left)->op1c2(yes)->io->ec2(no)->op2->e</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script></p>]]></content>
      
      
      <categories>
          
          <category> Test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hello </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
